{"version":3,"sources":["utils/getWeb3.js","utils/vehicleTypeMapper.js","services/VehicleService.js","components/NavigationBar.js","components/VehicleAddition.js","components/VehicleInfo.js","components/ApproveVehicle.js","components/SearchForVehicle.js","components/TransferVehicle.js","components/AllPendingVehicles.js","components/VehicleUtilization.js","components/MineVehicles.js","components/IncomingPendingTransfer.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","VehicleTypeMapper","_this","this","classCallCheck","getVehicleCode","name","vehicleMap","get","getVehicleName","code","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","done","_ref3","value","_ref2","slicedToArray","key","err","return","Map","set","GAS","VehicleService","contract","toBytes","x","utils","fromAscii","fromBytes","toAscii","fromBytesWithReplace","replace","Error","typeMapper","vehicle","_this2","eth","getAccounts","then","accounts","methods","addVehicle","id","vehicleModel","vehicleType","send","from","gas","getUserVehicles","getUtilizationIds","vehicleForUtilization","getRegisteredIds","vehicleRegistry","getIds","currentUserOwnerOf","currentUser","call","ids","getCurrentUser","vehicles","i","length","push","getVehicleReturnObject","type","parseInt","model","owner","approvals","getTransferIds","transferIds","transferId","waitingForTransfers","vehicleTransfer","getPendingApprovals","filtered","filter","vehiclesToApprove","vehicleId","notApprovingYet","getApprovals","getPendingIds","waitingForApprovals","getVehicle","getUtilizationApprovals","vehicleFromRegistry","includes","isApprovable","formatVehicle","vehicleFromPendings","isNotVehicleOwner","notApprovedByUser","vehiclesForUtilization","approve","approvable","address","_this3","transferVehicle","_this4","approveVehicle","_this5","approveUtilization","_this6","utilizeVehicle","_this7","approveTransfer","registeredIds","map","requiredConditions","condition","reason","concat","brokenCondition","find","conditionsFulfilled","transferPossible","pendingIds","getIdsFunction","initContract","process","net","getId","networkId","VehicleOwnershipDatabase","networks","Contract","abi","NavigationBar","state","account","props","page","navigationOptions","pageKey","description","onNavigationButtonClick","event","target","setState","onNavigationChange","getActualPageElement","option","react_default","createElement","className","disabled","getOtherPageElement","onClick","getElement","elem","getAccountInformation","title","getNetworkContent","network","getNetworkInformation","content","getNavigationBar","getContent","nextProps","nextContext","Component","VehicleAddition","added","vehicleService","handleVehicleTypeChanged","error","alreadyExisting","handleModelChanged","handleIdChanged","onChange","catch","handleRequestClicked","blocked","isIdAvailable","available","finally","getIdInputWithPlaceholder","placeholder","getIdInput","getAlreadyExisting","role","getErrorMessage","getAdded","getResult","accountChanged","VehicleInfo","getCarInfo","getBikeInfo","getIdInfo","getStateLabel","status","toUpperCase","ApproveVehicle","handleApproveClicked","onApproveClicked","getApproveButton","SearchForVehicle","possibleConstructorReturn","getPrototypeOf","downloaded","notFound","getStatusByType","utilizationIds","search","searchForVehicle","response","getVehicleInfo","VehicleInfo_VehicleInfo","ApproveVehicle_ApproveVehicle","getNotFound","propsChanged","change","getVehicleResult","TransferVehicle","transferred","handleAddressChanged","getTransferPositiveInfo","getDefaultError","getTransferNotPossibleError","errorMessage","transferNotPossibleReason","message","isTransferPossible","transfer","bind","getTransferResult","AllPendingVehicles","getAllPendingApprovalsDownloadError","handleUtilizationClicked","loadData","getVehicleToApprove","approveContent","getPendingVehicleInfos","pendingVehicles","pendingApprovalVehicles","objectSpread","utilizeVehicles","utilizationApprovalVehicles","getPendingVehiclesContent","getVehicles","pendingVehiclesPresent","getDefault","getWait","utilizedApprovalVehicles","getAllRegistrationRequestsPossibleToApprove","downloadedPending","getAllUtilizationRequestsPossibleToApprove","downloadedUtilization","VehicleUtilization","handleUtilization","onUtilizationClicked","getUtilizeButton","MineVehicles","getVehiclesDownloadError","getMinePendingApprovalVehicleInfos","VehicleUtilization_VehicleUtilization","getVehiclesContent","utilizedVehicles","registeredVehicles","transferedVehicleIds","transferedVehicles","downloadPending","downloadRegistered","downloadTransfered","downloadUtilized","getUserPendingApprovals","getUserUtilizedVehicles","getUserRegisteredVehicles","getUserUtilizationPendings","IncomingPendingTransfer","getIncomingPendingTransferVehicleInfos","download","getIncomingTransfers","Content","getAddingComponent","VehicleAddition_VehicleAddition","onAddingComponentChange","assertThisInitialized","MineVehicles_MineVehicles","addingComponentChange","getBrowsingComponent","SearchForVehicle_SearchForVehicle","browsingComponentChange","onBrowsingComponentChange","AllPendingVehicles_AllPendingVehicles","getPrivateComponent","privateComponentChange","TransferVehicle_TransferVehicle","onPrivateComponentChange","IncomingPendingTransfer_IncomingPendingTransfer","getDefaultComponent","style","textAlign","getProperComponents","prevState","App","NavigationBar_NavigationBar","Content_Content","intervalId","init","alert","setInterval","timer","clearInterval","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6w6SAqCeA,EAnCC,kBACd,IAAIC,QAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxBC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAE1Bf,OAAOgB,SAFmB,CAAAH,EAAAE,KAAA,gBAGtBP,EAAO,IAAIS,IAAKjB,OAAOgB,UAHDH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMpBf,OAAOgB,SAASE,SANI,OAQ1BpB,EAAQU,GARkBK,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAU1Bd,EAAMc,EAAAM,IAVoB,QAAAN,EAAAE,KAAA,iBAcrBf,OAAOQ,MAERA,EAAOR,OAAOQ,KACpBY,QAAQC,IAAI,2BACZvB,EAAQU,KAIFE,EAAW,IAAIO,IAAKK,UAAUC,aAClC,yBAEIf,EAAO,IAAIS,IAAKP,GACtBU,QAAQC,IAAI,gDACZvB,EAAQU,IA3BoB,yBAAAK,EAAAW,SAAAjB,EAAA,sCCLfkB,EAEjB,SAAAA,IAAc,IAAAC,EAAAC,KAAAzB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAF,GAAAE,KAMdE,eAAiB,SAACC,GAAD,OAAUJ,EAAKK,WAAWC,IAAIF,IANjCH,KAQdM,eAAiB,SAACC,GAAS,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACvB,QAAAC,EAAAC,EAA2Bd,EAAKK,WAAWU,UAA3CC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAzB,QAAA6B,MAAAT,GAAA,EAAsD,KAAAU,EAAAN,EAAAO,MAAAC,EAAA7C,OAAA8C,EAAA,EAAA9C,CAAA2C,EAAA,GAA1CI,EAA0CF,EAAA,GAClD,GADkDA,EAAA,KACpCb,EAAM,OAAOe,GAFR,MAAAC,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAK,EAAAW,QAAAX,EAAAW,SAAA,WAAAf,EAAA,MAAAC,KAPvBV,KAAKI,WAAa,IAAIqB,IACtBzB,KAAKI,WAAWsB,IAAI,MAAQ,GAC5B1B,KAAKI,WAAWsB,IAAI,OAAQ,ICF9BC,EAAM,UAESC,aACjB,SAAAA,EAAY/C,EAAMgD,GAAU,IAAA9B,EAAAC,KACxB,GADwBzB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAA4B,GAAA5B,KAkW5B8B,QAAU,SAAAC,GAAC,OAAIhC,EAAKlB,KAAKmD,MAAMC,UAAUF,IAlWb/B,KAmW5BkC,UAAY,SAAAH,GAAC,OAAIhC,EAAKlB,KAAKmD,MAAMG,QAAQJ,IAnWb/B,KAoW5BoC,qBAAuB,SAAAL,GAAC,OAAIhC,EAAKmC,UAAUH,GAAGM,QAAQ,UAAW,KAnWzC,qBAATxD,EACP,MAAM,IAAIyD,MAAM,0EAEpBtC,KAAKnB,KAAOA,EACZmB,KAAK6B,SAAWA,EAChB7B,KAAKuC,WAAa,IAAIzC,yDA0Bf0C,GAAS,IAAAC,EAAAzC,KAEhB,OADAP,QAAQC,IAAI,mCAAoC8C,GACzCxC,KAAKnB,KAAK6D,IAAIC,cAChBC,KAAK,SAAAC,GACF,OAAOJ,EAAKZ,SAASiB,QAAQC,WACzBN,EAAKX,QAAQU,EAAQQ,IACrBR,EAAQS,aACRR,EAAKF,WAAWrC,eAAesC,EAAQU,cACzCC,KAAK,CAACC,KAAMP,EAAS,GAAIQ,IAAKZ,EAAKd,4KAK7ClC,QAAQC,IAAI,+EACLM,KAAKsD,gBACRtD,KAAK6B,SAASiB,QAAQS,kBACtBvD,KAAK6B,SAASiB,QAAQU,6RAK1B/D,QAAQC,IAAI,8EACLM,KAAKsD,gBACRtD,KAAK6B,SAASiB,QAAQW,iBACtBzD,KAAK6B,SAASiB,QAAQY,oMAIRC,EAAQD,aAKjBE,0FAAmBpB,GACxB,OAAOqB,IAAgBrB,EAAQ,aALhBmB,IAASG,qBAAtBC,kBACoB/D,KAAKgE,wBAAzBH,SACAI,EAAW,GAMRC,EAAI,cAAGA,EAAIH,EAAII,gCACdnB,EAAKe,EAAIG,aACOR,EAAgBV,GAAIc,eAApCtB,SACFoB,EAAmBpB,IACnByB,EAASG,KAAKpE,KAAKqE,uBAAuBrB,EAAIR,YAJtB0B,kCAOhCzE,QAAQC,IAAI,sCAAuCuE,EAASE,0BACrDF,wJAGYjB,EAAIR,GAEvB,OADA/C,QAAQC,IAAI,UAAW8C,GAChB,CACHQ,GAAIhD,KAAKoC,qBAAqBY,GAC9BsB,KAAMtE,KAAKuC,WAAWjC,eAAeiE,SAAS/B,EAAQ,KACtDgC,MAAOhC,EAAQ,GACfiC,MAAOjC,EAAQ,GACfkC,UAAWlC,EAAQ,qKAKTxC,KAAKnB,KAAK6D,IAAIC,qDAAe,+RAIhB3C,KAAK6B,SAASiB,QAAQ6B,iBAAiBb,qBAA5Dc,kBACoB5E,KAAKgE,wBAAzBH,SACAI,EAAW,GACRC,EAAI,cAAGA,EAAIU,EAAYT,gCACtBU,EAAaD,EAAYV,aACDlE,KAAK6B,SAASiB,QAAQgC,oBAAoBD,GAAYf,sBAA9EiB,mBACgB/E,KAAK6B,SAASiB,QAAQY,gBAAgBmB,GAAYf,eAAlEtB,SACFqB,IAAgBkB,EAAgB,IAChCd,EAASG,KAAK,CACVpB,GAAIhD,KAAKoC,qBAAqByC,GAC9BP,KAAMtE,KAAKuC,WAAWjC,eAAeiE,SAAS/B,EAAQ,KACtDgC,MAAOhC,EAAQ,GACfiC,MAAOjC,EAAQ,aATa0B,oDAajCD,+QAIPxE,QAAQC,IAAI,mEACSM,KAAKnB,KAAK6D,IAAIC,4BAA7B8B,SAA4C,YAC1BzE,KAAKgF,yCACjB,SAAAxC,GAAO,OAAIA,EAAQiC,QAAUA,GADnCQ,SACDC,aACLzF,QAAQC,IAAI,0CAA2CuF,EAASd,0BACzDc,2SAIPxF,QAAQC,IAAI,kFAEeM,KAAKnB,KAAK6D,IAAIC,4BAAnCkB,SAAkD,YAChC7D,KAAKgF,6BAAvBf,SAEAkB,EAAoB,GAEjBjB,EAAI,cAAGA,EAAID,EAASE,gCACrB3B,EAAUyB,EAASC,GACnBkB,EAAYpF,KAAK8B,QAAQU,EAAQQ,cAEEhD,KAAK6B,SAASiB,QAChDuC,gBAAgBD,GAChBtB,KAAK,CAACV,KAAMS,oBAEerB,EAAQiC,QAAUZ,GAC9CsB,EAAkBf,KAAK5B,WATM0B,kCAarCzE,QAAQC,IAAI,0CAA2CyF,EAAkBhB,0BAClEgB,mQAIP1F,QAAQC,IAAI,sEACCM,KAAKsF,aACdtF,KAAK6B,SAASiB,QAAQyC,cACtBvF,KAAK6B,SAASiB,QAAQ0C,4OAIX7B,EAAQ8B,iGACJ9B,IAASG,cAAtBC,SACAE,EAAW,GAERC,EAAI,cAAGA,EAAIH,EAAII,gCACdnB,EAAKe,EAAIG,YACOuB,EAAWzC,GAAIc,cAA/BtB,SACNyB,EAASG,KAAKpE,KAAKqE,uBAAuBrB,EAAIR,YAHlB0B,kCAKhCzE,QAAQC,IAAI,2DAA4DuE,EAASE,0BAC1EF,2SAIPxE,QAAQC,IAAI,sFAEeM,KAAKnB,KAAK6D,IAAIC,4BAAnCkB,SAAkD,YAChC7D,KAAK0F,iCAM7B,IANMzB,SAENxE,QAAQC,IAAI,sDAAuDuE,GAE7DkB,EAAoB,GAEjBjB,EAAI,EAAGA,EAAID,EAASE,OAAQD,KAC7B1B,EAAUyB,EAASC,IAEXO,QAAUZ,GAClBsB,EAAkBf,KAAK5B,UAI/B/C,QAAQC,IAAI,0CAA2CyF,EAAkBhB,0BAClEgB,uQAIP1F,QAAQC,IAAI,qEACCM,KAAKsF,aACdtF,KAAK6B,SAASiB,QAAQS,kBACtBvD,KAAK6B,SAASiB,QAAQU,kPAIPR,kGACnBvD,QAAQC,IAAI,6CAA8CsD,YAC/BhD,KAAKnB,KAAK6D,IAAIC,4BAAnCkB,SAAkD,YAEtB7D,KAAK6B,SAASiB,QAAQY,gBAAgB1D,KAAK8B,QAAQkB,IAAKc,mBAApF6B,UACkB,qCACM3F,KAAK6B,SAASiB,QAAQ6B,iBAAiBb,0BAEjD8B,SAAS5F,KAAK8B,QAAQkB,sCACJhD,KAAK6B,SAASiB,QAAQgC,oBAAoB9E,KAAK8B,QAAQkB,IAAKc,sBAApFiB,SAEAc,EAAehC,IAAgBkB,EAAgB,GAErDtF,QAAQC,IAAI,gDAAiDiG,qBACtD3F,KAAK8F,cAAc9C,EAAI2C,EAAqBE,mBAGvDpG,QAAQC,IAAI,gDAAiDiG,qBACtD3F,KAAK8F,cAAc9C,EAAI2C,GAAqB,6BAGrB3F,KAAK6B,SAASiB,QAAQ0C,oBAAoBxF,KAAK8B,QAAQkB,IAAKc,oBAAxFiC,UACkB,2BACdC,EAAoBnC,IAAgBkC,EAAoB,aAE9B/F,KAAK6B,SAASiB,QAAQuC,gBAAgBrF,KAAK8B,QAAQkB,IAC9Ec,KAAK,CAACV,KAAMS,mBADXoC,SAGAJ,EAAeG,GAAqBC,EAE1CxG,QAAQC,IAAI,gDAAiDqG,qBACtD/F,KAAK8F,cAAc9C,EAAI+C,EAAqBF,6BAGlB7F,KAAK6B,SAASiB,QAAQU,sBAAsBxD,KAAK8B,QAAQkB,IAAKc,oBAA7FoC,UACqB,2BACjBL,EAAehC,IAAgBqC,EAAuB,GAE5DzG,QAAQC,IAAI,mDAAoDwG,qBACzDlG,KAAK8F,cAAc9C,EAAIkD,EAAwBL,mBAG1DpG,QAAQC,IAAI,0CAA2CsD,qBAChD,gJAGGA,EAAIR,EAAS2D,GACvB,MAAO,CACHnD,GAAIA,EACJsB,KAAMtE,KAAKuC,WAAWjC,eAAeiE,SAAS/B,EAAQ,KACtDgC,MAAOhC,EAAQ,GACfiC,MAAOjC,EAAQ,GACf4D,WAAYD,mFAIEnD,EAAIqD,uGACfrG,KAAKnB,KAAK6D,IAAIC,cAChBC,KAAK,SAAAC,GACF,OAAOyD,EAAKzE,SAASiB,QAAQyD,gBAAgBD,EAAKxE,QAAQkB,GAAKqD,GAC1DlD,KAAK,CAACC,KAAMP,EAAS,GAAIQ,IAAK1B,2LAI1BqB,uGACVhD,KAAKnB,KAAK6D,IAAIC,cAChBC,KAAK,SAAAC,GACF,OAAO2D,EAAK3E,SAASiB,QAAQ2D,eAAeD,EAAK1E,QAAQkB,IACpDG,KAAK,CAACC,KAAMP,EAAS,GAAIQ,IAAK1B,6LAItBqB,uGACdhD,KAAKnB,KAAK6D,IAAIC,cAChBC,KAAK,SAAAC,GACF,OAAO6D,EAAK7E,SAASiB,QAAQ6D,mBAAmBD,EAAK5E,QAAQkB,IACxDG,KAAK,CAACC,KAAMP,EAAS,GAAIQ,IAAK1B,yLAI1BqB,uGACVhD,KAAKnB,KAAK6D,IAAIC,cAChBC,KAAK,SAAAC,GACF,OAAO+D,EAAK/E,SAASiB,QAAQ+D,eAAeD,EAAK9E,QAAQkB,IACpDG,KAAK,CAACC,KAAMP,EAAS,GAAIQ,IAAK1B,0LAIzBqB,uGACXhD,KAAKnB,KAAK6D,IAAIC,cAChBC,KAAK,SAAAC,GACF,OAAOiE,EAAKjF,SAASiB,QAAQiE,gBAAgBD,EAAKhF,QAAQkB,IACrDG,KAAK,CAACC,KAAMP,EAAS,GAAIQ,IAAK1B,6LAItBqB,EAAIqD,0FACzB5G,QAAQC,IAAI,yDACcM,KAAKgE,+BAAzBH,kBAEuB7D,KAAK6B,SAASiB,QAAQW,mBAAmBK,0BAC7D9D,KAAKoC,qBADR4E,SACDC,oBACsBjH,KAAK6B,SAASiB,QAAQ6B,iBAAiBb,2BACzD9D,KAAKoC,qBADRwC,SACDqC,UAECC,EAAqB,CAAC,CACxBC,UAAWH,EAAcpB,SAAS5C,GAClCoE,OAAM,0BAAAC,OAA4BrE,EAA5B,sDACP,CACCmE,WAAYvC,EAAYgB,SAAS5C,GACjCoE,OAAM,WAAAC,OAAarE,EAAb,6BACP,CACCmE,UAAWtD,IAAgBwC,EAC3Be,OAAM,6CAGJE,EAAkBJ,EAAmBK,KAAK,SAAAxF,GAAC,OAAKA,EAAEoF,YAClDK,OAA0C7G,IAApB2G,oBAErBE,EACH,CAACC,kBAAkB,EAAML,OAAQ,IACjC,CAACK,kBAAkB,EAAOL,OAAQE,EAAgBF,6LAGtCpE,2FACahD,KAAKyD,iCAA5BuD,kBACoBhH,KAAKuF,8BAAzBmC,4BAEEV,EACHK,OAAOK,GACP9B,SAAS5C,0QAIDhD,KAAK2D,OAAO3D,KAAK6B,SAASiB,QAAQW,4TAIlCzD,KAAK2D,OAAO3D,KAAK6B,SAASiB,QAAQyC,0TAIlCvF,KAAK2D,OAAO3D,KAAK6B,SAASiB,QAAQ6B,8TAIlC3E,KAAK2D,OAAO3D,KAAK6B,SAASiB,QAAQS,oOAGtCoE,mFACKA,IAAiB7D,0BACtB9D,KAAKoC,8CAAT6E,6IAtVGpI,GACR,OAAO+C,EAAegG,aAAa/I,GAC9B+D,KAAK,SAAAf,GAAQ,OAAI,IAAID,EAAe/C,EAAMgD,0CAG/BhD,GAKhB,OAHAY,QAAQC,IAAI,kFACZD,QAAQC,IAAImI,uHAELhJ,EAAK6D,IAAIoF,IAAIC,QACfnF,KAAK,SAAAoF,GAGF,GAFwBC,EAAyBC,SAASF,GAGtD,OAAO,IAAInJ,EAAK6D,IAAIyF,SAChBF,EAAyBG,IACzBP,yDC7BHQ,6MACjBC,MAAQ,CACJC,QAASxI,EAAKyI,MAAMD,QACpBP,UAAWjI,EAAKyI,MAAMR,UACtBS,KAAM1I,EAAKyI,MAAMC,QAGrBC,kBAAoB,CAAC,CACjBC,QAAS,UACTC,YAAa,eACd,CACCD,QAAS,SACTC,YAAa,eACd,CACCD,QAAS,WACTC,YAAa,sBAyBjBC,wBAA0B,SAAAC,GACtB,IAAML,EAAOK,EAAMC,OAAO5H,MAC1BpB,EAAKiJ,SAAS,CAACP,KAAMA,IACrB1I,EAAKkJ,mBAAmBR,MAG5BS,qBAAuB,SAAAC,GACnB,OACIC,EAAA1K,EAAA2K,cAAA,UACIC,UAAW,kBACXC,UAAU,EACVpI,MAAOgI,EAAOR,SACbQ,EAAOP,gBAKpBY,oBAAsB,SAAAL,GAClB,OACIC,EAAA1K,EAAA2K,cAAA,UACIC,UAAW,2BACXG,QAAS1J,EAAK8I,wBACd1H,MAAOgI,EAAOR,SACbQ,EAAOP,gBAKpBc,WAAa,SAAAP,GACT,IAAMQ,EAAO5J,EAAKuI,MAAMG,OAASU,EAAOR,QACpC5I,EAAKmJ,qBAAqBC,GAC1BpJ,EAAKyJ,oBAAoBL,GAE7B,OACIC,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,MAAOhI,IAAK6H,EAAOR,SAC9BgB,MAKbC,sBAAwB,WACpB,OACIR,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YAAaO,MAAO9J,EAAKuI,MAAMC,SAC3Ca,EAAA1K,EAAA2K,cAAA,uBACctJ,EAAKuI,MAAMC,aAMrCuB,kBAAoB,WAChB,OAAI/J,EAAKuI,MAAMyB,QAEPX,EAAA1K,EAAA2K,cAAA,uBACctJ,EAAKuI,MAAMN,WAKzBoB,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,uBACctJ,EAAKuI,MAAMN,WAGzBoB,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,sBACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,WAAhB,WAIAF,EAAA1K,EAAA2K,cAAA,sDASpBW,sBAAwB,WACpB,IAAMC,EAAUlK,EAAK+J,oBAErB,OAAO/J,EAAKuI,MAAMN,WACdoB,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YAAaO,MAAO9J,EAAKuI,MAAMC,SAC1C0B,MAKbC,iBAAmB,WACf,OACId,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,OACXvJ,EAAK2I,kBAAkBzB,IAAIlH,EAAK2J,gBAK7CS,WAAa,WACT,OAAOpK,EAAKuI,MAAMyB,SACdX,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,iFACXvJ,EAAKmK,wGAxHdlK,KAAKiJ,mBAAqBjJ,KAAKwI,MAAMS,mBACrC,IAAMc,EAAU9B,EAAyBC,SAASlI,KAAKsI,MAAMN,WAC7DhI,KAAKgJ,SAAS,CACVe,QAASA,sDAISK,EAAWC,GACjC,GAAID,EAAUpC,YAAchI,KAAKsI,MAAMN,UAAW,CAC9C,IAAM+B,EAAU9B,EAAyBC,SAASkC,EAAUpC,WAC5DhI,KAAKgJ,SAAS,CACVe,QAASA,IAIjB/J,KAAKgJ,SAAS,CACVT,QAAS6B,EAAU7B,QACnBP,UAAWoC,EAAUpC,6CA4GzB,OACIoB,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,wBACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,sFACXtJ,KAAKgK,yBAGVZ,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,sFACXtJ,KAAK4J,yBAGT5J,KAAKmK,qBA1JqBG,aCDtBC,6MACjBjC,MAAQ,CACJtF,GAAI,GACJC,aAAc,GACdC,YAAa,MACbsH,OAAO,KAEXC,eAAiB1K,EAAKyI,MAAMiC,iBAY5BC,yBAA2B,SAAC5B,GAAD,OACvB/I,EAAKiJ,SAAS,CACV9F,YAAa4F,EAAMC,OAAO5H,MAC1BqJ,OAAO,EACPG,OAAO,EACPC,iBAAiB,OAGzBC,mBAAqB,SAAC/B,GAAD,OACjB/I,EAAKiJ,SAAS,CACV/F,aAAc6F,EAAMC,OAAO5H,MAC3BqJ,OAAO,EACPG,OAAO,EACPC,iBAAiB,OAGzBE,gBAAkB,SAAChC,GAAD,OACd/I,EAAKiJ,SAAS,CACVhG,GAAI8F,EAAMC,OAAO5H,MACjBqJ,OAAO,EACPG,OAAO,EACPC,iBAAiB,OAGzB7H,WAAa,SAACP,GAMV,OAAOzC,EAAK0K,eAAe1H,WAAWP,GACjCI,KAAK,WACF7C,EAAKiJ,SAAS,CACVwB,OAAO,EACPvH,aAAc,GACdD,GAAI,KAERjD,EAAKyI,MAAMuC,aAEdC,MAAM,SAAAL,GAAK,OAAIlL,QAAQC,IAAI,uCAAwCiL,QAG5EM,qBAAuB,WACnBlL,EAAKiJ,SAAS,CACVkC,SAAS,IAGbnL,EAAK0K,eAAeU,cAAcpL,EAAKuI,MAAMtF,IACxCJ,KAAK,SAAAwI,GAGF,GAFA3L,QAAQC,IAAI,4DACRK,EAAKuI,MAAMtF,GAAIoI,EAAY,GAAK,QAChCA,EACA,OAAOrL,EAAKgD,WAAWhD,EAAKuI,OAK5B,MAHAvI,EAAKiJ,SAAS,CACV4B,iBAAiB,IAEftI,UAGb0I,MAAM,kBACHjL,EAAKiJ,SAAS,CACV2B,OAAO,MAGdU,QAAQ,kBACLtL,EAAKiJ,SAAS,CACVkC,SAAS,SAKzBI,0BAA4B,SAAAC,GAAW,OACnCnC,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,SACIkC,YAAaA,EACbhC,SAAUxJ,EAAKuI,MAAM4C,QACrB/J,MAAOpB,EAAKuI,MAAMtF,GAClB+H,SAAUhL,EAAK+K,sBAG3BU,WAAa,WACT,MAA+B,QAA3BzL,EAAKuI,MAAMpF,YACJnD,EAAKuL,0BAA0B,OACJ,SAA3BvL,EAAKuI,MAAMpF,YACXnD,EAAKuL,0BAA0B,UAGlClC,EAAA1K,EAAA2K,cAAA,4CAOZoC,mBAAqB,kBACjBrC,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,qBAAqBoC,KAAK,SAAzC,+DAIJC,gBAAkB,kBACdvC,EAAA1K,EAAA2K,cAAA,yCAIJuC,SAAW,kBACPxC,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,sBAAsBoC,KAAK,SAA1C,gCAIJG,UAAY,kBAAM9L,EAAKuI,MAAMqC,MACxB5K,EAAKuI,MAAMsC,gBACR7K,EAAK0L,qBACL1L,EAAK4L,kBACR5L,EAAKuI,MAAMkC,MACRzK,EAAK6L,WACL,+FA9HkBxB,GAClBpK,KAAK8L,eAAe1B,IACpBpK,KAAKgJ,SAAS,CAACwB,OAAO,2CAIfJ,GACX,OAAOpK,KAAKwI,MAAMD,UAAY6B,EAAU7B,yCA0HxC,OACIa,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,0BAAhB,uBAGAF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,0BACZF,EAAA1K,EAAA2K,cAAA,UACIC,UAAW,0BACXnI,MAAOnB,KAAKsI,MAAMpF,YAClBqG,SAAUvJ,KAAKsI,MAAM4C,QACrBH,SAAU/K,KAAK0K,0BACftB,EAAA1K,EAAA2K,cAAA,UAAQlI,MAAM,OAAd,OACAiI,EAAA1K,EAAA2K,cAAA,UAAQlI,MAAM,QAAd,SAGJiI,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,SACIkC,YAAa,QACbpK,MAAOnB,KAAKsI,MAAMrF,aAClBsG,SAAUvJ,KAAKsI,MAAM4C,QACrBH,SAAU/K,KAAK6K,sBAGtB7K,KAAKwL,aAENpC,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,UAAQ/E,KAAM,SACNiF,SAAUvJ,KAAKsI,MAAM4C,QACrB5B,UAAW,kBACXG,QAASzJ,KAAKiL,sBAHtB,YAOHjL,KAAK6L,qBA3KmBvB,aCAxByB,6MACjBzD,MAAQ,KACR9F,QAAUzC,EAAKyI,MAAMhG,UAErBwJ,WAAa,WACT,OACI5C,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,iBADJ,IACiBtJ,EAAKyC,QAAQQ,OAKtCiJ,YAAc,WACV,OACI7C,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,oBADJ,IACoBtJ,EAAKyC,QAAQQ,OAKzCkJ,UAAY,WACR,MAA6B,QAAtBnM,EAAKyC,QAAQ8B,KAChBvE,EAAKiM,aACLjM,EAAKkM,iBAGbE,cAAgB,WACZ,GAAIpM,EAAKyC,QAAQ4J,OACb,OAAOrM,EAAKyC,QAAQ4J,OAAOC,uFAK/B,OACIjD,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,gBAAkBtJ,KAAKwC,QAAQ4J,QAC3ChD,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,0BACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,sBACZF,EAAA1K,EAAA2K,cAAA,kBADJ,IACkBrJ,KAAKwC,QAAQ8B,MAE/B8E,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,wBAA0BtJ,KAAKwC,QAAQ4J,OAAS,UAC3DpM,KAAKmM,kBAId/C,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,mBADJ,IACmBrJ,KAAKwC,QAAQgC,OAG/BxE,KAAKkM,YAEN9C,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,aAAetJ,KAAKwC,QAAQ4J,OAAS,UAExB,YAAxBpM,KAAKwC,QAAQ4J,OAAuBpM,KAAKwC,QAAQkC,UAAY,iBAAmB,YApD5D4F,aCApBgC,6MACjBhE,MAAQ,KACRlD,UAAYrF,EAAKyI,MAAMpD,YACvBmH,qBAAuBxM,EAAKyI,MAAM+D,uBAElCC,iBAAmB,SAAC1D,GAChB/I,EAAKwM,qBAAqBzD,EAAMC,OAAO/F,OAG3CyJ,iBAAmB,WACf,OACIrD,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,8BACZF,EAAA1K,EAAA2K,cAAA,UAAQ/E,KAAM,SACNgF,UAAW,kBACXtG,GAAIjD,EAAKqF,UACTqE,QAAS1J,EAAKyM,kBAHtB,eAUZrC,WAAa,WACT,OAAOpK,EAAK0M,4FAIZ,OAAOzM,KAAKmK,oBA3BwBG,aCGvBoC,cAEjB,SAAAA,EAAYlE,GAAO,IAAAzI,EAAA,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAA0M,IACf3M,EAAAxB,OAAAoO,EAAA,EAAApO,CAAAyB,KAAAzB,OAAAqO,EAAA,EAAArO,CAAAmO,GAAA5I,KAAA9D,KAAMwI,KAuBVsC,gBAAkB,SAAAhC,GAAK,OACnB/I,EAAKiJ,SAAS,CACVhG,GAAI8F,EAAMC,OAAO5H,MACjB0L,YAAY,EACZlC,OAAO,EACPmC,UAAU,KA7BC/M,EAgCnBgN,gBAAkB,SAAC/J,EAAIgE,EAAegG,EAAgBpI,EAAa8C,GAC/D,OAAIsF,EAAepH,SAAS5C,GACjB,UACA4B,EAAYgB,SAAS5C,GACrB,WACA0E,EAAW9B,SAAS5C,GACpB,UACAgE,EAAcpB,SAAS5C,GACvB,kBADJ,GAvCQjD,EA4CnBkN,OAAS,SAACjK,EAAIoJ,GACV3M,QAAQC,IAAI,wCAAyCsD,GACrDjD,EAAK0K,eAAeyC,iBAAiBlK,GAChCJ,KAAK,SAAAuK,GACF1N,QAAQC,IAAI,mDAAoDyN,GAChEA,EAASf,OAASA,EAClBrM,EAAKiJ,SAAS,CACVxG,QAAS2K,MAGhBnC,MAAM,SAAAL,GACHlL,QAAQC,IAAI,+BAAgCiL,GAC5C5K,EAAKiJ,SAAS,CACV2B,OAAO,MAGdU,QAAQ,kBACLtL,EAAKiJ,SAAS,CACV6D,YAAY,OA9DT9M,EAmEnBkL,qBAAuB,WACnB,IAMIjE,EACAgG,EACApI,EACA8C,EATE1E,EAAKjD,EAAKuI,MAAMtF,GAEtBjD,EAAKiJ,SAAS,CACVkC,SAAS,IAQbnL,EAAK0K,eAAehH,mBACfb,KAAK,SAAAuK,GAEF,OADAnG,EAAgBmG,EACTpN,EAAK0K,eAAelH,sBAE9BX,KAAK,SAAAuK,GAEF,OADAH,EAAiBG,EACVpN,EAAK0K,eAAe9F,mBAE9B/B,KAAK,SAAAuK,GAEF,OADAvI,EAAcuI,EACPpN,EAAK0K,eAAelF,kBAE9B3C,KAAK,SAAAuK,GACFzF,EAAayF,EAEb,IAAIf,EAASrM,EAAKgN,gBAAgB/J,EAAIgE,EAAegG,EAAgBpI,EAAa8C,GAElF,GAAI0E,EACA,OAAOrM,EAAKkN,OAAOjK,EAAIoJ,GAKvB,MAHArM,EAAKiJ,SAAS,CACV8D,UAAU,IAERxK,UAGb0I,MAAM,SAAAL,GACHlL,QAAQC,IAAIiL,GACZ5K,EAAKiJ,SAAS,CACV2B,OAAO,MAGdU,QAAQ,kBACLtL,EAAKiJ,SAAS,CACVkC,SAAS,OAlHNnL,EAuHnBwM,qBAAuB,SAACvJ,GACpBjD,EAAK0K,eAAehE,eAAezD,GAC9BJ,KAAK,WACFnD,QAAQC,IAAI,mCAAoCsD,GAChDjD,EAAKiJ,SAAS,CAAC6D,YAAY,IAC3B9M,EAAKyI,MAAMuC,cA5HJhL,EAgInBqN,eAAiB,kBACbhE,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,iBAAhB,gBAEIF,EAAA1K,EAAA2K,cAACgE,EAAD,CACI7K,QAASzC,EAAKuI,MAAM9F,UACvBzC,EAAKuI,MAAM9F,QAAQ4D,YACpBgD,EAAA1K,EAAA2K,cAACiE,EAAD,CACIlI,UAAWrF,EAAKuI,MAAM9F,QAAQQ,GAC9BuJ,qBAAsBxM,EAAKwM,yBAxIpBxM,EA4InBwN,YAAc,kBACVnE,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,sBAAsBoC,KAAK,SAA1C,iBA7Ie3L,EAiJnB4L,gBAAkB,kBACdvC,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,qBAAqBoC,KAAK,SAAzC,4BAhJA3L,EAAKuI,MAAQ,CACTqC,OAAO,EACPmC,UAAU,EACVD,YAAY,EACZ3B,SAAS,EACTlI,GAAI,IAERjD,EAAK0K,eAAiB1K,EAAKyI,MAAMiC,eATlB1K,yFAYOqK,GAClBpK,KAAKwN,aAAapD,IACI,KAAlBpK,KAAKsI,MAAMtF,IACXhD,KAAKiN,OAAOjN,KAAKsI,MAAMtF,yCAKtBoH,GACT,OAAOpK,KAAKwI,MAAMiF,SAAWrD,EAAUqD,kDAkIvC,OAAOzN,KAAKsI,MAAMqC,MACb3K,KAAKsI,MAAMwE,SACR9M,KAAKuN,cACLvN,KAAK2L,kBACR3L,KAAKsI,MAAMuE,WACP7M,KAAKsI,MAAM9F,SACRxC,KAAKoN,iBACT,sCAIR,OACIhE,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,4BAAhB,sBAGAF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,4BACZF,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,SACIkC,YAAa,KACbhC,SAAUvJ,KAAKsI,MAAM4C,QACrB/J,MAAOnB,KAAKsI,MAAMtF,GAClB+H,SAAU/K,KAAK8K,mBAGvB1B,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,UAAQ/E,KAAM,SACNiF,SAAUvJ,KAAKsI,MAAM4C,QACrB5B,UAAW,kBACXG,QAASzJ,KAAKiL,sBAHtB,WAQHjL,KAAK0N,4BA3LoBpD,aCHzBqD,6MACjBrF,MAAQ,CACJqC,OAAO,EACPiD,aAAa,EACbvH,QAAS,GACTrD,GAAI,GACJyE,kBAAkB,EAClByD,SAAS,KAEbT,eAAiB1K,EAAKyI,MAAMiC,iBAE5BK,gBAAkB,SAAChC,GACf/I,EAAKiJ,SAAS,CACVhG,GAAI8F,EAAMC,OAAO5H,MACjBsG,kBAAkB,OAI1BoG,qBAAuB,SAAC/E,GACpB/I,EAAKiJ,SAAS,CACV3C,QAASyC,EAAMC,OAAO5H,WAkE9B2M,wBAA0B,WACtB,OACI1E,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,sBAAsBoC,KAAK,SAA1C,kHAORC,gBAAkB,kBAAO5L,EAAKuI,MAAMb,iBAEhC1H,EAAKgO,kBADLhO,EAAKiO,iCAGTD,gBAAkB,kBACd3E,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,qBAAqBoC,KAAK,SACpC3L,EAAKuI,MAAM2F,aACRlO,EAAKuI,MAAM2F,aACX,iCAGZD,4BAA8B,kBAC1B5E,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,qBAAqBoC,KAAK,SACpC3L,EAAKuI,MAAM4F,oGApFXlL,EAAIqD,GAAS,IAAA5D,EAAAzC,KAClB,OAAOA,KAAKyK,eAAelE,gBAAgBvD,EAAIqD,GAC1CzD,KAAK,WACFnD,QAAQC,IAAI,iBACZ+C,EAAKuG,SAAS,CACV4E,aAAa,IAEjBnL,EAAK+F,MAAMuC,aAEdC,MAAM,SAAAL,GACHlL,QAAQC,IAAI,wBAAyBiL,EAAMwD,SAC3C1L,EAAKuG,SAAS,CACV2B,OAAO,EACPsD,aAActD,EAAMwD,YAG3B9C,QAAQ,WACL5L,QAAQC,IAAI,oBACZ+C,EAAKuG,SAAS,CACVhG,GAAI,GACJqD,QAAS,GACT6E,SAAS,qDAKF,IAAA5E,EAAAtG,KACbgD,EAAKhD,KAAKsI,MAAMtF,GAChBqD,EAAUrG,KAAKsI,MAAMjC,QAO3BrG,KAAKgJ,SAAS,CACVkC,SAAS,IAGblL,KAAKyK,eAAe2D,mBAAmBpL,EAAIqD,GACtCzD,KAAK,SAACuK,GAEH,GADA1N,QAAQC,IAAIyN,GACRA,EAAS1F,iBACT,OAAOnB,EAAK+H,SAASrL,EAAIqD,GAEzBC,EAAK0C,SAAS,CACVvB,kBAAkB,EAClByD,SAAS,EACTgD,0BAA2Bf,EAAS/F,OACpCuD,OAAO,MAKlBK,MAAM,SAAAL,GACHlL,QAAQC,IAAI,2BAA4BiL,GACxCrE,EAAK0C,SAAS,CACV2B,OAAO,kDA+BnB,OAAO3K,KAAKsI,MAAMqC,MACd3K,KAAK2L,kBACJ3L,KAAKsI,MAAMsF,YAAc5N,KAAK8N,0BAA4B,sCAI/D,OACI1E,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,0BAAhB,oBAIAF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,0BACZF,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,SACIkC,YAAa,aACbpK,MAAOnB,KAAKsI,MAAMtF,GAClBuG,SAAUvJ,KAAKsI,MAAM4C,QACrBH,SAAU/K,KAAK8K,mBAGvB1B,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,SACIkC,YAAa,mBACbpK,MAAOnB,KAAKsI,MAAMjC,QAClBkD,SAAUvJ,KAAKsI,MAAM4C,QACrBH,SAAU/K,KAAK6N,wBAGvBzE,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,UAAQ/E,KAAM,SACNgF,UAAW,kBACXC,SAAUvJ,KAAKsI,MAAM4C,QACrBzB,QAASzJ,KAAKiL,qBAAqBqD,KAAKtO,OAHhD,qBAQHA,KAAKuO,6BAtJmBjE,qBCGxBkE,cAEjB,SAAAA,EAAYhG,GAAO,IAAAzI,EAAA,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAwO,IACfzO,EAAAxB,OAAAoO,EAAA,EAAApO,CAAAyB,KAAAzB,OAAAqO,EAAA,EAAArO,CAAAiQ,GAAA1K,KAAA9D,KAAMwI,KA4DViG,oCAAsC,WAClC,OACIrF,EAAA1K,EAAA2K,cAAA,wCA/DWtJ,EAqEnBwM,qBAAuB,SAACvJ,GACpBjD,EAAK0K,eAAehE,eAAezD,GAC9BJ,KAAK,SAAAuK,GACF1N,QAAQC,IAAI,mDAAoDyN,GAChEpN,EAAKyI,MAAMuC,cAzEJhL,EA6EnB2O,yBAA2B,SAAC1L,GACxBjD,EAAK0K,eAAe9D,mBAAmB3D,GAClCJ,KAAK,SAAAuK,GACF1N,QAAQC,IAAI,wCAAyCyN,GACrDpN,EAAK4O,cAjFE5O,EAqFnB6O,oBAAsB,SAACpM,GACnB,IAAMqM,EAAoC,YAAnBrM,EAAQ4J,OAC3BhD,EAAA1K,EAAA2K,cAACiE,EAAD,CACIlI,UAAW5C,EAAQQ,GACnBuJ,qBAAsBxM,EAAKwM,uBAEX,YAAnB/J,EAAQ4J,OACDhD,EAAA1K,EAAA2K,cAACiE,EAAD,CACIlI,UAAW5C,EAAQQ,GACnBuJ,qBAAsBxM,EAAK2O,2BAE/B,KAGZ,OACItF,EAAA1K,EAAA2K,cAAA,OAAK/H,IAAKkB,EAAQQ,GAAKR,EAAQ4J,QAC3BhD,EAAA1K,EAAA2K,cAACgE,EAAD,CACI7K,QAASA,IACZqM,IAvGM9O,EA4GnB+O,uBAAyB,WACrB,IAAMC,EAAkBhP,EAAKuI,MAAM0G,wBAC9B/H,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,cACpC8C,EAAkBnP,EAAKuI,MAAM6G,4BAC9BlI,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,cAE1C,OAAO2C,EACF1H,OAAO6H,GACPjI,IAAIlH,EAAK6O,sBApHC7O,EAuHnBqP,0BAA4B,kBACxBhG,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,8BAAhB,iCAGCvJ,EAAK+O,2BA5HK/O,EA+HnBsP,YAAc,kBAAMtP,EAAKuP,yBACrBvP,EAAKqP,4BACLrP,EAAKwP,cAjIUxP,EAmInBuP,uBAAyB,kBACrBvP,EAAKuI,MAAM0G,wBAAwB7K,OAAS,GAC5CpE,EAAKuI,MAAM6G,4BAA4BhL,OAAS,GArIjCpE,EAuInBwP,WAAa,kBACTnG,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,iCAAiCoC,KAAK,SAArD,mDAzIW3L,EA8InByP,QAAU,kBACNpG,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,mBAAmBoC,KAAK,SAAvC,mBA7IA3L,EAAKuI,MAAQ,CACT0G,wBAAyB,GACzBS,yBAA0B,IAE9B1P,EAAK0K,eAAiB1K,EAAKyI,MAAMiC,eANlB1K,mFAUfC,KAAK2O,6DAGiBvE,GAClBpK,KAAKwN,aAAapD,IAClBpK,KAAK2O,gDAIAvE,GACT,OAAOpK,KAAKwI,MAAMiF,SAAWrD,EAAUqD,0CAGhC,IAAAhL,EAAAzC,KACPA,KAAKyK,eAAeiF,8CACf9M,KAAK,SAAAqB,GACFxE,QAAQC,IAAI,mEAAoEuE,GAChFxB,EAAKuG,SAAS,CACVgG,wBAAyB/K,MAGhC+G,MAAM,WACHvI,EAAKuG,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL5I,EAAKuG,SAAS,CACV2G,mBAAmB,MAI/B3P,KAAKyK,eAAemF,6CACfhN,KAAK,SAAAuK,GACF1N,QAAQC,IAAI,kEAAmEyN,GAC/E1K,EAAKuG,SAAS,CACVmG,4BAA6BhC,MAGpCnC,MAAM,WACHvI,EAAKuG,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL5I,EAAKuG,SAAS,CACV6G,uBAAuB,uCA4FnC,OAAO7P,KAAKsI,MAAMqH,mBAAqB3P,KAAKsI,MAAMuH,sBAC7C7P,KAAKsI,MAAMqC,MACR3K,KAAKyO,sCACLzO,KAAKqP,cACTrP,KAAKwP,iBA1J+BlF,aCH3BwF,6MACjBxH,MAAQ,KACRlD,UAAYrF,EAAKyI,MAAMpD,YACvB2K,kBAAoBhQ,EAAKyI,MAAMuH,oBAE/BC,qBAAuB,SAAClH,GACpB/I,EAAKgQ,kBAAkBjH,EAAMC,OAAO/F,OAGxCiN,iBAAmB,WACf,OACI7G,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,kCACZF,EAAA1K,EAAA2K,cAAA,UAAQ/E,KAAM,SACNgF,UAAW,iBACXtG,GAAIjD,EAAKqF,UACTqE,QAAS1J,EAAKiQ,sBAHtB,eAUZ7F,WAAa,WACT,OAAOpK,EAAKkQ,4FAIZ,OAAOjQ,KAAKmK,oBA3B4BG,aCG3B4F,cAEjB,SAAAA,EAAY1H,GAAO,IAAAzI,EAAA,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAkQ,IACfnQ,EAAAxB,OAAAoO,EAAA,EAAApO,CAAAyB,KAAAzB,OAAAqO,EAAA,EAAArO,CAAA2R,GAAApM,KAAA9D,KAAMwI,KAmHV2H,yBAA2B,WACvB,OACI/G,EAAA1K,EAAA2K,cAAA,wCAtHWtJ,EA4HnBgQ,kBAAoB,SAAC/M,GACjBjD,EAAK0K,eAAe5D,eAAe7D,GAC9BJ,KAAK,SAAAuK,GACF1N,QAAQC,IAAI,kBAAmByN,GAC/BpN,EAAK4O,cAhIE5O,EAoInBqQ,mCAAqC,SAACnM,GAClC,OACIA,EAASgD,IAAI,SAAAzE,GACT,OAAQ4G,EAAA1K,EAAA2K,cAAA,OAAK/H,IAAKkB,EAAQQ,GAAKR,EAAQ4J,QACnChD,EAAA1K,EAAA2K,cAACgE,EAAD,CACI7K,QAASA,IACO,eAAnBA,EAAQ4J,QACThD,EAAA1K,EAAA2K,cAACgH,EAAD,CACIjL,UAAW5C,EAAQQ,GACnB+M,kBAAmBhQ,EAAKgQ,wBA7IzBhQ,EAoJnBuQ,mBAAqB,SAACrM,GAClB,OACImF,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,uBAAhB,eAGCvJ,EAAKqQ,mCAAmCnM,KA1JlClE,EA+JnBsP,YAAc,WACV,IAAMN,EAAkBhP,EAAKuI,MAAMyG,gBAC9B9H,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,cAEpCmE,EAAmBxQ,EAAKuI,MAAMiI,iBAC/BtJ,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,cAEpCoE,EAAqBzQ,EAAKuI,MAAMkI,mBACjCtL,OAAO,SAAA1C,GAAO,OAAKzC,EAAKuI,MAAMmI,qBAAqB7K,SAASpD,EAAQQ,MACpEiE,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,iBAEpCsE,EAAqB3Q,EAAKuI,MAAMkI,mBACjCtL,OAAO,SAAA1C,GAAO,OAAIzC,EAAKuI,MAAMmI,qBAAqB7K,SAASpD,EAAQQ,MACnEiE,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,eAEpCnI,EAAW8K,EACZ1H,OAAOkJ,GACPlJ,OAAOmJ,GACPnJ,OAAOqJ,GAEZ,OAAOzM,GAAYA,EAASE,OAAS,EACjCpE,EAAKuQ,mBAAmBrM,GACxBlE,EAAKwP,cArLMxP,EAwLnBwP,WAAa,WACT,OACInG,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,iCAAiCoC,KAAK,SAArD,iDA3LO3L,EAkMnByP,QAAU,WACN,OACIpG,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,mBAAmBoC,KAAK,SAAvC,mBAlMJ3L,EAAKuI,MAAQ,CACTqI,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBnG,OAAO,EACPoE,gBAAiB,GACjBwB,iBAAkB,GAClBC,mBAAoB,GACpBC,qBAAsB,IAE1B1Q,EAAK0K,eAAiB1K,EAAKyI,MAAMiC,eAblB1K,mFAiBfC,KAAK2O,6DAGiBvE,GAClBpK,KAAKwN,aAAapD,IAClBpK,KAAK2O,8CAKT3O,KAAK+Q,0BACL/Q,KAAKgR,0BACLhR,KAAKiR,4BACLjR,KAAK2E,0DAGQ,IAAAlC,EAAAzC,KACbA,KAAKyK,eAAe9F,iBACf/B,KAAK,SAAAuK,GACF1N,QAAQC,IAAI,2CAA4CyN,GACxD1K,EAAKuG,SAAS,CACVyH,qBAAsBtD,MAI7BnC,MAAM,SAACzJ,GACJ9B,QAAQC,IAAI6B,GACZkB,EAAKuG,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL5I,EAAKuG,SAAS,CACV6H,oBAAoB,0DAKR,IAAAvK,EAAAtG,KACxBA,KAAKyK,eAAewG,4BACfrO,KAAK,SAAAuK,GACF7G,EAAK0C,SAAS,CACVwH,mBAAoBrD,MAG3BnC,MAAM,WACH1E,EAAK0C,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL/E,EAAK0C,SAAS,CACV4H,oBAAoB,wDAKV,IAAApK,EAAAxG,KACtBA,KAAKyK,eAAesG,0BACfnO,KAAK,SAAAuK,GACF3G,EAAKwC,SAAS,CACV+F,gBAAiB5B,MAGxBnC,MAAM,WACHxE,EAAKwC,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL7E,EAAKwC,SAAS,CACV2H,iBAAiB,wDAKP,IAAAjK,EAAA1G,KACtBA,KAAKyK,eAAeyG,6BACftO,KAAK,SAAAqB,GACFyC,EAAKsC,SAAS,CACVuH,iBAAkBtM,MAGzB+G,MAAM,WACHtE,EAAKsC,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL3E,EAAKsC,SAAS,CACV8H,kBAAkB,2CAKrB1G,GACT,OAAOpK,KAAKwI,MAAMiF,SAAWrD,EAAUqD,wCA0FvC,OAAOzN,KAAKsI,MAAMsI,oBAClB5Q,KAAKsI,MAAMqI,iBACX3Q,KAAKsI,MAAMuI,oBACX7Q,KAAKsI,MAAMwI,iBACN9Q,KAAKsI,MAAMqC,MACR3K,KAAKmQ,2BACLnQ,KAAKqP,cACTrP,KAAKwP,iBApNyBlF,aCArB6G,cAEjB,SAAAA,EAAY3I,GAAO,IAAAzI,EAAA,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAmR,IACfpR,EAAAxB,OAAAoO,EAAA,EAAApO,CAAAyB,KAAAzB,OAAAqO,EAAA,EAAArO,CAAA4S,GAAArN,KAAA9D,KAAMwI,KA0CV2H,yBAA2B,kBACvB/G,EAAA1K,EAAA2K,cAAA,wCA5CetJ,EAgDnBwM,qBAAuB,SAAAvJ,GAAE,OACrBjD,EAAK0K,eAAe1D,gBAAgB/D,GAC/BJ,KAAK,WACFnD,QAAQC,IAAI,qBAAsBsD,GAClCjD,EAAKyI,MAAMuC,cApDJhL,EAuDnBqR,uCAAyC,SAAAnN,GAAQ,OAC7CA,EAASgD,IAAI,SAAAzE,GAAO,OAChB4G,EAAA1K,EAAA2K,cAAA,OAAK/H,IAAKkB,EAAQQ,GAAKR,EAAQ4J,QAC3BhD,EAAA1K,EAAA2K,cAACgE,EAAD,CACI7K,QAASA,IACb4G,EAAA1K,EAAA2K,cAACiE,EAAD,CACIlI,UAAW5C,EAAQQ,GACnBuJ,qBAAsBxM,EAAKwM,2BA9DxBxM,EAkEnBuQ,mBAAqB,SAAArM,GAAQ,OACzBmF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,sBACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,uBAAhB,8BAGCvJ,EAAKqR,uCAAuCnN,KAvElClE,EA0EnBsP,YAAc,WACV,IAAMpL,EAAWlE,EAAKuI,MAAMrE,SACvBgD,IAAI,SAAAzE,GAAO,OAAAjE,OAAA0Q,EAAA,EAAA1Q,CAAA,GAASiE,EAAT,CAAkB4J,OAAQ,eAE1C,OAAOnI,GAAYA,EAASE,OAAS,EACjCpE,EAAKuQ,mBAAmBrM,GACxBlE,EAAKwP,cAhFMxP,EAmFnBwP,WAAa,kBACTnG,EAAA1K,EAAA2K,cAAA,WACID,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,sDAAsDoC,KAAK,SAA1E,4CArFW3L,EA0FnByP,QAAU,kBACNpG,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,mBAAmBoC,KAAK,SAAvC,mBAzFA3L,EAAKuI,MAAQ,CACT+I,UAAU,EACV1G,OAAO,EACP1G,SAAU,IAEdlE,EAAK0K,eAAiB1K,EAAKyI,MAAMiC,eAPlB1K,mFAWfC,KAAK2O,6DAGiBvE,GAClBpK,KAAKwN,aAAapD,IAClBpK,KAAK2O,gDAIAvE,GACT,OAAOpK,KAAKwI,MAAMiF,SAAWrD,EAAUqD,0CAGhC,IAAAhL,EAAAzC,KACPA,KAAKyK,eAAe6G,uBACf1O,KAAK,SAAAuK,GACF1K,EAAKuG,SAAS,CACV/E,SAAUkJ,MAGjBnC,MAAM,WACHvI,EAAKuG,SAAS,CACV2B,OAAO,MAGdU,QAAQ,WACL5I,EAAKuG,SAAS,CACVqI,UAAU,uCA0DtB,OAAOrR,KAAKsI,MAAM+I,SACbrR,KAAKsI,MAAMqC,MACR3K,KAAKmQ,2BACLnQ,KAAKqP,cACTrP,KAAKwP,iBAtGoClF,aCIhCiH,cAEjB,SAAAA,EAAY/I,GAAO,IAAAzI,EAAA,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAAuR,IACfxR,EAAAxB,OAAAoO,EAAA,EAAApO,CAAAyB,KAAAzB,OAAAqO,EAAA,EAAArO,CAAAgT,GAAAzN,KAAA9D,KAAMwI,KAyBVgJ,mBAAqB,WACjB,OACIpI,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,OACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YACZF,EAAA1K,EAAA2K,cAACoI,EAAD,CACIhH,eAAgB1K,EAAK0K,eACrBM,SAAUhL,EAAK2R,wBAAwBpD,KAA7B/P,OAAAoT,EAAA,EAAApT,CAAAwB,IACVwI,QAASxI,EAAKyI,MAAMD,WAE5Ba,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YACZF,EAAA1K,EAAA2K,cAACuI,EAAD,CACInH,eAAgB1K,EAAK0K,eACrBgD,OAAQ1N,EAAKuI,MAAMuJ,2BAtCpB9R,EA4CnB+R,qBAAuB,WACnB,OACI1I,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,OACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YACZF,EAAA1K,EAAA2K,cAAC0I,EAAD,CACItH,eAAgB1K,EAAK0K,eACrBgD,OAAQ1N,EAAKuI,MAAM0J,wBACnBjH,SAAUhL,EAAKkS,0BAA0B3D,KAA/B/P,OAAAoT,EAAA,EAAApT,CAAAwB,OAElBqJ,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YACZF,EAAA1K,EAAA2K,cAAC6I,EAAD,CACIzH,eAAgB1K,EAAK0K,eACrBgD,OAAQ1N,EAAKuI,MAAM0J,wBACnBjH,SAAUhL,EAAKkS,0BAA0B3D,KAA/B/P,OAAAoT,EAAA,EAAApT,CAAAwB,SAzDXA,EA+DnBoS,oBAAsB,WAClB,OACI/I,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,OACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YACZF,EAAA1K,EAAA2K,cAACuI,EAAD,CACInH,eAAgB1K,EAAK0K,eACrBgD,OAAQ1N,EAAKuI,MAAM8J,0BAE3BhJ,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,YACZF,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,aACZF,EAAA1K,EAAA2K,cAACgJ,EAAD,CACI5H,eAAgB1K,EAAK0K,eACrBM,SAAUhL,EAAKuS,yBAAyBhE,KAA9B/P,OAAAoT,EAAA,EAAApT,CAAAwB,OAElBqJ,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,aACZF,EAAA1K,EAAA2K,cAACkJ,EAAD,CACI9H,eAAgB1K,EAAK0K,eACrBgD,OAAQ1N,EAAKuI,MAAM8J,uBACnBrH,SAAUhL,EAAKuS,yBAAyBhE,KAA9B/P,OAAAoT,EAAA,EAAApT,CAAAwB,UAjFfA,EA0GnByS,oBAAsB,WAClB,OACIpJ,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,OACZF,EAAA1K,EAAA2K,cAAA,OACIC,UAAW,YACXmJ,MAAO,CAACC,UAAW,WAFvB,uBA7GO3S,EAsHnB4S,oBAAsB,WAClB,OAAQ5S,EAAKuI,MAAMG,MACf,IAAK,SACD,OAAO1I,EAAKyR,qBAChB,IAAK,WACD,OAAOzR,EAAK+R,uBAChB,IAAK,UACD,OAAO/R,EAAKoS,sBAChB,QACI,OAAOpS,EAAKyS,wBA7HpBzS,EAAK0K,eAAiB1K,EAAKyI,MAAMiC,eACjC1K,EAAKuI,MAAQ,CACTG,KAAM1I,EAAKyI,MAAMC,KACjBoJ,uBAAuB,EACvBG,yBAAyB,EACzBI,wBAAwB,GAPbrS,yFAWOqK,EAAWC,GAC7BD,EAAU3B,OAASzI,KAAKsI,MAAMG,MAC9BzI,KAAKgJ,SAAS,CAACP,KAAM2B,EAAU3B,OAE/BzI,KAAK8L,eAAe1B,KACpBpK,KAAK0R,0BACL1R,KAAKiS,4BACLjS,KAAKsS,mEAIElI,GACX,OAAOA,EAAU7B,UAAYvI,KAAKwI,MAAMD,0DAkExCvI,KAAKgJ,SAAS,SAAA4J,GAAS,MAAK,CACxBf,uBAAwBe,EAAUf,6EAKtC7R,KAAKgJ,SAAS,SAAA4J,GAAS,MAAK,CACxBZ,yBAA0BY,EAAUZ,8EAKxChS,KAAKgJ,SAAS,SAAA4J,GAAS,MAAK,CACxBR,wBAAyBQ,EAAUR,2DA8BvC,OACIpS,KAAK2S,6BAvIoBrI,aCmGtBuI,sBA7FX,SAAAA,EAAYrK,GAAO,IAAAzI,EAAA,OAAAxB,OAAA0B,EAAA,EAAA1B,CAAAyB,KAAA6S,IACf9S,EAAAxB,OAAAoO,EAAA,EAAApO,CAAAyB,KAAAzB,OAAAqO,EAAA,EAAArO,CAAAsU,GAAA/O,KAAA9D,KAAMwI,KAkDVS,mBAAqB,SAACR,GAClB1I,EAAKiJ,SAAS,CAACP,KAAMA,KApDN1I,EAuDnBmK,iBAAmB,WACf,OAAOd,EAAA1K,EAAA2K,cAACyJ,EAAD,CACHvK,QAASxI,EAAKuI,MAAMC,QACpBP,UAAWjI,EAAKuI,MAAMN,UACtBS,KAAM1I,EAAKuI,MAAMG,KACjBQ,mBAAoBlJ,EAAKkJ,mBAAmBqF,KAAxB/P,OAAAoT,EAAA,EAAApT,CAAAwB,OA5DTA,EA+DnBoK,WAAa,WAET,OADoBlC,EAAyBC,SAASnI,EAAKuI,MAAMN,YAE7DoB,EAAA1K,EAAA2K,cAAC0J,EAAD,CACIxK,QAASxI,EAAKuI,MAAMC,QACpBE,KAAM1I,EAAKuI,MAAMG,KACjBgC,eAAgB1K,EAAKuI,MAAMmC,kBAnEnC1K,EAAKuI,MAAQ,CACTzJ,KAAM,KACN4L,eAAgB,KAChBhC,KAAM,UACNF,QAAS,KACTyK,WAAY,MAPDjT,kOAaQ9B,kBAAbY,kBACuB+C,EAAeqR,KAAKpU,iBAA3C4L,kBACiB5L,EAAK6D,IAAIC,4BAA1B4F,SAAyC,aACtB1J,EAAK6D,IAAIoF,IAAIC,gBAAhCC,SAENhI,KAAKgJ,SAAS,CACVnK,KAAMA,EACN4L,eAAgBA,EAChBlC,QAASA,EACTP,UAAWA,sDAGfkL,MAAK,0EAGLzT,QAAQkL,MAARzL,EAAAM,YAEEwT,EAAaG,YAAYnT,KAAKoT,MAAM9E,KAAKtO,MAAO,KACtDA,KAAKgJ,SAAS,CAACgK,WAAYA,+JAI3BK,cAAcrT,KAAKsI,MAAM0K,4KAIFhT,KAAKsI,MAAMzJ,KAAK6D,IAAIC,4BAArC4F,SAAoD,YACjCvI,KAAKsI,MAAMzJ,KAAK6D,IAAIoF,IAAIC,eAA3CC,SAEFO,IAAYvI,KAAKsI,MAAMC,SACvBP,IAAchI,KAAKsI,MAAMN,WACzBhI,KAAKgJ,SAAS,CACVT,QAASA,EACTP,UAAWA,uIA2BnB,OAAKhI,KAAKsI,MAAMzJ,KAQRuK,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,MAAOtG,GAAI,QACvBoG,EAAA1K,EAAA2K,cAAA,OAAKC,UAAW,6EACXtJ,KAAKkK,mBAELlK,KAAKmK,eAVdf,EAAA1K,EAAA2K,cAAA,OAAKC,UAAU,mBAAmBoC,KAAK,SAAvC,kDA7EEpB,cCDEgJ,QACW,cAA7BjV,OAAOkV,SAASC,UAEe,UAA7BnV,OAAOkV,SAASC,UAEhBnV,OAAOkV,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvK,EAAA1K,EAAA2K,cAACuK,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrR,KAAK,SAAAsR,GACjCA,EAAaC","file":"static/js/main.e0b48f72.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","export default class VehicleTypeMapper {\n\n    constructor() {\n        this.vehicleMap = new Map();\n        this.vehicleMap.set(\"car\",  0);\n        this.vehicleMap.set(\"bike\", 1);\n    }\n\n    getVehicleCode = (name) => this.vehicleMap.get(name);\n\n    getVehicleName = (code) => {\n        for (const [key, value] of this.vehicleMap.entries()) {\n            if (value === code) return key;\n        }\n    }\n}","import VehicleOwnershipDatabase from \"../contracts/VehicleOwnershipDatabase\";\nimport VehicleTypeMapper from \"../utils/vehicleTypeMapper\";\n\nconst GAS = \"3000000\";\n\nexport default class VehicleService {\n    constructor(web3, contract) {\n        if (typeof web3 === 'undefined') {\n            throw new Error('Cannot instantiate VehicleService directly. Use init function instead.');\n        }\n        this.web3 = web3;\n        this.contract = contract;\n        this.typeMapper = new VehicleTypeMapper();\n    }\n\n    static init(web3) {\n        return VehicleService.initContract(web3)\n            .then(contract => new VehicleService(web3, contract));\n    }\n\n    static initContract(web3) {\n\n        console.log(\"[CONTRACT INIT ] retrieved address: \" + process.env.REACT_APP_VEHICLE_CONTRACT);\n        console.log(process.env);\n\n        return web3.eth.net.getId()\n            .then(networkId => {\n                const deployedNetwork = VehicleOwnershipDatabase.networks[networkId];\n\n                if (deployedNetwork) {\n                    return new web3.eth.Contract(\n                        VehicleOwnershipDatabase.abi,\n                        process.env.REACT_APP_VEHICLE_CONTRACT,\n                    );\n                }\n            });\n    }\n\n    addVehicle(vehicle) {\n        console.log('[VEHICLE SERVICE] Adding vehicle', vehicle);\n        return this.web3.eth.getAccounts()\n            .then(accounts => {\n                return this.contract.methods.addVehicle(\n                    this.toBytes(vehicle.id),\n                    vehicle.vehicleModel,\n                    this.typeMapper.getVehicleCode(vehicle.vehicleType)\n                ).send({from: accounts[0], gas: this.GAS})\n            });\n    }\n\n    async getUserUtilizationPendings() {\n        console.log('[VEHICLE SERVICE] Retrieving user utilization pendings...');\n        return this.getUserVehicles(\n            this.contract.methods.getUtilizationIds,\n            this.contract.methods.vehicleForUtilization\n        );\n    }\n\n    async getUserRegisteredVehicles() {\n        console.log('[VEHICLE SERVICE] Retrieving user registered vehicles...');\n        return this.getUserVehicles(\n            this.contract.methods.getRegisteredIds,\n            this.contract.methods.vehicleRegistry\n        );\n    }\n\n    async getUserVehicles(getIds, vehicleRegistry) {\n        const ids = (await getIds().call());\n        const currentUser = await this.getCurrentUser();\n        const vehicles = [];\n\n        function currentUserOwnerOf(vehicle) {\n            return currentUser === vehicle[2];\n        }\n\n        for (let i = 0; i < ids.length; i++) {\n            const id = ids[i];\n            const vehicle = await vehicleRegistry(id).call();\n            if (currentUserOwnerOf(vehicle)) {\n                vehicles.push(this.getVehicleReturnObject(id, vehicle));\n            }\n        }\n        console.log(\"[VEHICLE SERVICE] Found %d vehicles\", vehicles.length);\n        return vehicles;\n    }\n\n    getVehicleReturnObject(id, vehicle) {\n        console.log('vehicle', vehicle);\n        return {\n            id: this.fromBytesWithReplace(id),\n            type: this.typeMapper.getVehicleName(parseInt(vehicle[0])),\n            model: vehicle[1],\n            owner: vehicle[2],\n            approvals: vehicle[4]\n        };\n    }\n\n    async getCurrentUser() {\n        return (await this.web3.eth.getAccounts())[0];\n    }\n\n    async getIncomingTransfers() {\n        const transferIds = (await this.contract.methods.getTransferIds().call());\n        const currentUser = await this.getCurrentUser();\n        const vehicles = [];\n        for (let i = 0; i < transferIds.length; i++) {\n            const transferId = transferIds[i];\n            const vehicleTransfer = await this.contract.methods.waitingForTransfers(transferId).call();\n            const vehicle = await this.contract.methods.vehicleRegistry(transferId).call();\n            if (currentUser === vehicleTransfer[1]) {\n                vehicles.push({\n                    id: this.fromBytesWithReplace(transferId),\n                    type: this.typeMapper.getVehicleName(parseInt(vehicle[0])),\n                    model: vehicle[1],\n                    owner: vehicle[2]\n                });\n            }\n        }\n        return vehicles;\n    }\n\n    async getUserPendingApprovals() {\n        console.log('[VEHICLE SERVICE] Retrieving current user approvals...');\n        const owner = (await this.web3.eth.getAccounts())[0];\n        const filtered = (await this.getPendingApprovals())\n            .filter(vehicle => vehicle.owner === owner);\n        console.log(\"[VEHICLE SERVICE] Filtered %d approvals\", filtered.length);\n        return filtered;\n    }\n\n    async getAllRegistrationRequestsPossibleToApprove() {\n        console.log('[VEHICLE SERVICE] Retrieving pending approvals possible to approve...');\n\n        const currentUser = (await this.web3.eth.getAccounts())[0];\n        const vehicles = (await this.getPendingApprovals());\n\n        const vehiclesToApprove = [];\n\n        for (let i = 0; i < vehicles.length; i++) {\n            let vehicle = vehicles[i];\n            let vehicleId = this.toBytes(vehicle.id);\n\n            const notApprovedByCurrentUser = await this.contract.methods\n                .notApprovingYet(vehicleId)\n                .call({from: currentUser});\n\n            if (notApprovedByCurrentUser && vehicle.owner !== currentUser) {\n                vehiclesToApprove.push(vehicle);\n            }\n        }\n\n        console.log(\"[VEHICLE SERVICE] Filtered %d approvals\", vehiclesToApprove.length);\n        return vehiclesToApprove;\n    }\n\n    async getPendingApprovals() {\n        console.log('[VEHICLE SERVICE] Retrieving all registration pendings...');\n        return await this.getApprovals(\n            this.contract.methods.getPendingIds,\n            this.contract.methods.waitingForApprovals\n        );\n    }\n\n    async getApprovals(getIds, getVehicle) {\n        const ids = (await getIds().call());\n        const vehicles = [];\n\n        for (let i = 0; i < ids.length; i++) {\n            const id = ids[i];\n            const vehicle = await getVehicle(id).call();\n            vehicles.push(this.getVehicleReturnObject(id, vehicle));\n        }\n        console.log(\"[VEHICLE SERVICE] Found %d vehicles waiting for approval\", vehicles.length);\n        return vehicles;\n    }\n\n    async getAllUtilizationRequestsPossibleToApprove() {\n        console.log('[VEHICLE SERVICE] Retrieving utilization approvals possible to approve...');\n\n        const currentUser = (await this.web3.eth.getAccounts())[0];\n        const vehicles = (await this.getUtilizationApprovals());\n\n        console.log('[VEHICLE SERVICE] Vehicles pending for utilization:', vehicles);\n\n        const vehiclesToApprove = [];\n\n        for (let i = 0; i < vehicles.length; i++) {\n            let vehicle = vehicles[i];\n\n            if (vehicle.owner !== currentUser) {\n                vehiclesToApprove.push(vehicle);\n            }\n        }\n\n        console.log(\"[VEHICLE SERVICE] Filtered %d approvals\", vehiclesToApprove.length);\n        return vehiclesToApprove;\n    }\n\n    async getUtilizationApprovals() {\n        console.log('[VEHICLE SERVICE] Retrieving all utilization pendings...');\n        return await this.getApprovals(\n            this.contract.methods.getUtilizationIds,\n            this.contract.methods.vehicleForUtilization\n        );\n    }\n\n    async searchForVehicle(id) {\n        console.log('[VEHICLE SERVICE] Searching for vehicle %s', id);\n        const currentUser = (await this.web3.eth.getAccounts())[0];\n\n        const vehicleFromRegistry = await this.contract.methods.vehicleRegistry(this.toBytes(id)).call();\n        if (vehicleFromRegistry[3]) {\n            const transferIds = await this.contract.methods.getTransferIds().call();\n\n            if (transferIds.includes(this.toBytes(id))) {\n                const vehicleTransfer = await this.contract.methods.waitingForTransfers(this.toBytes(id)).call();\n\n                const isApprovable = currentUser === vehicleTransfer[1];\n\n                console.log('[VEHICLE SERVICE] Vehicle found in transfer: ', vehicleFromRegistry);\n                return this.formatVehicle(id, vehicleFromRegistry, isApprovable)\n            }\n\n            console.log('[VEHICLE SERVICE] Vehicle found in registry: ', vehicleFromRegistry);\n            return this.formatVehicle(id, vehicleFromRegistry, false)\n        }\n\n        const vehicleFromPendings = await this.contract.methods.waitingForApprovals(this.toBytes(id)).call();\n        if (vehicleFromPendings[3]) {\n            const isNotVehicleOwner = currentUser !== vehicleFromPendings[2];\n\n            const notApprovedByUser = await this.contract.methods.notApprovingYet(this.toBytes(id))\n                .call({from: currentUser});\n\n            const isApprovable = isNotVehicleOwner && notApprovedByUser;\n\n            console.log('[VEHICLE SERVICE] Vehicle found in pendings: ', vehicleFromPendings);\n            return this.formatVehicle(id, vehicleFromPendings, isApprovable)\n        }\n\n        const vehiclesForUtilization = await this.contract.methods.vehicleForUtilization(this.toBytes(id)).call();\n        if (vehiclesForUtilization[3]) {\n            const isApprovable = currentUser !== vehiclesForUtilization[2];\n\n            console.log('[VEHICLE SERVICE] Vehicle found in utilization: ', vehiclesForUtilization);\n            return this.formatVehicle(id, vehiclesForUtilization, isApprovable)\n        }\n\n        console.log('[VEHICLE SERVICE] Vehicle %s not found!', id);\n        return null;\n    }\n\n    formatVehicle(id, vehicle, approve) {\n        return {\n            id: id,\n            type: this.typeMapper.getVehicleName(parseInt(vehicle[0])),\n            model: vehicle[1],\n            owner: vehicle[2],\n            approvable: approve\n        }\n    }\n\n    async transferVehicle(id, address) {\n        return this.web3.eth.getAccounts()\n            .then(accounts => {\n                return this.contract.methods.transferVehicle(this.toBytes(id), address)\n                    .send({from: accounts[0], gas: GAS})\n            });\n    }\n\n    async approveVehicle(id) {\n        return this.web3.eth.getAccounts()\n            .then(accounts => {\n                return this.contract.methods.approveVehicle(this.toBytes(id))\n                    .send({from: accounts[0], gas: GAS})\n            });\n    }\n\n    async approveUtilization(id) {\n        return this.web3.eth.getAccounts()\n            .then(accounts => {\n                return this.contract.methods.approveUtilization(this.toBytes(id))\n                    .send({from: accounts[0], gas: GAS})\n            });\n    }\n\n    async utilizeVehicle(id) {\n        return this.web3.eth.getAccounts()\n            .then(accounts => {\n                return this.contract.methods.utilizeVehicle(this.toBytes(id))\n                    .send({from: accounts[0], gas: GAS})\n            });\n    }\n\n    async approveTransfer(id) {\n        return this.web3.eth.getAccounts()\n            .then(accounts => {\n                return this.contract.methods.approveTransfer(this.toBytes(id))\n                    .send({from: accounts[0], gas: GAS})\n            });\n    }\n\n    async isTransferPossible(id, address) {\n        console.log('[VEHICLE SERVICE] Check if transfer possible');\n        const currentUser = await this.getCurrentUser();\n\n        const registeredIds = (await this.contract.methods.getRegisteredIds().call())\n            .map(this.fromBytesWithReplace);\n        const transferIds = (await this.contract.methods.getTransferIds().call())\n            .map(this.fromBytesWithReplace);\n\n        const requiredConditions = [{\n            condition: registeredIds.includes(id),\n            reason: `You do not own vehicle ${id}. You can transfer only your registered vehicles!`\n        }, {\n            condition: !transferIds.includes(id),\n            reason: `Vehicle ${id} is already in transfer!`\n        }, {\n            condition: currentUser !== address,\n            reason: `You cannot transfer vehicle to yourself!`\n        }];\n\n        const brokenCondition = requiredConditions.find(x => !x.condition);\n        const conditionsFulfilled = brokenCondition === undefined;\n\n        return conditionsFulfilled ?\n            {transferPossible: true, reason: \"\"} :\n            {transferPossible: false, reason: brokenCondition.reason};\n    }\n\n    async isIdAvailable(id) {\n        const registeredIds = (await this.getRegisteredIds());\n        const pendingIds = (await this.getPendingIds());\n\n        return !registeredIds\n            .concat(pendingIds)\n            .includes(id);\n    }\n\n    async getRegisteredIds() {\n        return await this.getIds(this.contract.methods.getRegisteredIds);\n    }\n\n    async getPendingIds() {\n        return await this.getIds(this.contract.methods.getPendingIds);\n    }\n\n    async getTransferIds() {\n        return await this.getIds(this.contract.methods.getTransferIds);\n    }\n\n    async getUtilizationIds() {\n        return await this.getIds(this.contract.methods.getUtilizationIds);\n    }\n\n    async getIds(getIdsFunction) {\n        return (await getIdsFunction().call())\n            .map(this.fromBytesWithReplace);\n    }\n\n    toBytes = x => this.web3.utils.fromAscii(x);\n    fromBytes = x => this.web3.utils.toAscii(x);\n    fromBytesWithReplace = x => this.fromBytes(x).replace(/\\u0000/g, '');\n}","import React, {Component} from \"react\";\nimport VehicleOwnershipDatabase from \"../contracts/VehicleOwnershipDatabase\";\n\nexport default class NavigationBar extends Component {\n    state = {\n        account: this.props.account,\n        networkId: this.props.networkId,\n        page: this.props.page\n    };\n\n    navigationOptions = [{\n        pageKey: \"private\",\n        description: \"My vehicles\"\n    }, {\n        pageKey: \"adding\",\n        description: \"Add vehicle\"\n    }, {\n        pageKey: \"browsing\",\n        description: \"Browse vehicles\"\n    }];\n\n    componentDidMount() {\n        this.onNavigationChange = this.props.onNavigationChange;\n        const network = VehicleOwnershipDatabase.networks[this.state.networkId];\n        this.setState({\n            network: network\n        })\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.networkId !== this.state.networkId) {\n            const network = VehicleOwnershipDatabase.networks[nextProps.networkId];\n            this.setState({\n                network: network\n            })\n        }\n\n        this.setState({\n            account: nextProps.account,\n            networkId: nextProps.networkId\n        });\n    }\n\n    onNavigationButtonClick = event => {\n        const page = event.target.value;\n        this.setState({page: page});\n        this.onNavigationChange(page);\n    };\n\n    getActualPageElement = option => {\n        return (\n            <button\n                className={\"btn btn-primary\"}\n                disabled={true}\n                value={option.pageKey}>\n                {option.description}\n            </button>\n        );\n    };\n\n    getOtherPageElement = option => {\n        return (\n            <button\n                className={\"btn btn-secondary active\"}\n                onClick={this.onNavigationButtonClick}\n                value={option.pageKey}>\n                {option.description}\n            </button>\n        );\n    };\n\n    getElement = option => {\n        const elem = this.state.page === option.pageKey ?\n            this.getActualPageElement(option) :\n            this.getOtherPageElement(option);\n\n        return (\n            <div className={\"col\"} key={option.pageKey}>\n                {elem}\n            </div>\n        );\n    };\n\n    getAccountInformation = () => {\n        return (\n            <div className={\"col-xs-12\"} title={this.state.account}>\n                <div>\n                    Account: {this.state.account}\n                </div>\n            </div>\n        );\n    };\n\n    getNetworkContent = () => {\n        if (this.state.network) {\n            return (\n                <div>\n                    Network: {this.state.networkId}\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div>\n                        Network: {this.state.networkId}\n                    </div>\n\n                    <div className={\"wrong-neighborhood\"}>\n                        <div className={\"caution\"}>\n                            CAUTION\n                        </div>\n\n                        <div>\n                            Selected network is not supported!\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    getNetworkInformation = () => {\n        const content = this.getNetworkContent();\n\n        return this.state.networkId && (\n            <div className={\"col-xs-12\"} title={this.state.account}>\n                {content}\n            </div>\n        );\n    };\n\n    getNavigationBar = () => {\n        return (\n            <div className={\"row\"}>\n                {this.navigationOptions.map(this.getElement)}\n            </div>\n        );\n    };\n\n    getContent = () => {\n        return this.state.network &&\n            <div className={\"col-lg-6 offset-lg-3 col-md-10 offset-md-1 col-sm-12 col-xs-12 navigation-bar\"}>\n                {this.getNavigationBar()}\n            </div>\n    };\n\n    render() {\n        return (\n            <div className={\"row navigation-panel\"}>\n                <div className={'col-lg-6 offset-lg-3 col-md-10 offset-md-1 col-sm-12 col-xs-12 network-information'}>\n                    {this.getNetworkInformation()}\n                </div>\n\n                <div className={'col-lg-6 offset-lg-3 col-md-10 offset-md-1 col-sm-12 col-xs-12 account-information'}>\n                    {this.getAccountInformation()}\n                </div>\n\n                {this.getContent()}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport default class VehicleAddition extends Component {\n    state = {\n        id: \"\",\n        vehicleModel: \"\",\n        vehicleType: \"car\",\n        added: false\n    };\n    vehicleService = this.props.vehicleService;\n\n    componentWillReceiveProps(nextProps) {\n        if (this.accountChanged(nextProps)) {\n            this.setState({added: false});\n        }\n    }\n\n    accountChanged(nextProps) {\n        return this.props.account !== nextProps.account;\n    }\n\n    handleVehicleTypeChanged = (event) =>\n        this.setState({\n            vehicleType: event.target.value,\n            added: false,\n            error: false,\n            alreadyExisting: false\n        });\n\n    handleModelChanged = (event) =>\n        this.setState({\n            vehicleModel: event.target.value,\n            added: false,\n            error: false,\n            alreadyExisting: false\n        });\n\n    handleIdChanged = (event) =>\n        this.setState({\n            id: event.target.value,\n            added: false,\n            error: false,\n            alreadyExisting: false\n        });\n\n    addVehicle = (vehicle) => {\n        // this.setState({\n        //     vehicleModel: \"\",\n        //     id: \"\"\n        // });\n\n        return this.vehicleService.addVehicle(vehicle)\n            .then(() => {\n                this.setState({\n                    added: true,\n                    vehicleModel: \"\",\n                    id: \"\"\n                });\n                this.props.onChange();\n            })\n            .catch(error => console.log(\"Error occurred during adding vehicle\", error))\n    };\n\n    handleRequestClicked = () => {\n        this.setState({\n            blocked: true\n        });\n\n        this.vehicleService.isIdAvailable(this.state.id)\n            .then(available => {\n                console.log(\"[VEHICLE ADDITION] %s VIN / Serial number is%s available.\",\n                    this.state.id, available ? \"\" : \" not\");\n                if (available) {\n                    return this.addVehicle(this.state);\n                } else {\n                    this.setState({\n                        alreadyExisting: true\n                    });\n                    throw Error();\n                }\n            })\n            .catch(() =>\n                this.setState({\n                    error: true\n                })\n            )\n            .finally(() =>\n                this.setState({\n                    blocked: false\n                })\n            );\n    };\n\n    getIdInputWithPlaceholder = placeholder =>\n        <div>\n            <input\n                placeholder={placeholder}\n                disabled={this.state.blocked}\n                value={this.state.id}\n                onChange={this.handleIdChanged}/>\n        </div>;\n\n    getIdInput = () => {\n        if (this.state.vehicleType === \"car\") {\n            return this.getIdInputWithPlaceholder(\"VIN\");\n        } else if (this.state.vehicleType === \"bike\") {\n            return this.getIdInputWithPlaceholder(\"Serial\");\n        } else {\n            return (\n                <div>\n                    There should be something!\n                </div>\n            )\n        }\n    };\n\n    getAlreadyExisting = () =>\n        <div className=\"alert alert-danger\" role=\"alert\">\n            Vehicle with entered VIN / Serial number already exists.\n        </div>;\n\n    getErrorMessage = () =>\n        <div>\n            There was some error...\n        </div>;\n\n    getAdded = () =>\n        <div className=\"alert alert-success\" role=\"alert\">\n            Vehicle added to pending.\n        </div>;\n\n    getResult = () => this.state.error ?\n        (this.state.alreadyExisting ?\n            this.getAlreadyExisting() :\n            this.getErrorMessage()) :\n        (this.state.added ?\n            this.getAdded() :\n            null);\n\n    render() {\n        return (\n            <div>\n                <div className={\"vehicle-addition-title\"}>\n                    Request new vehicle\n                </div>\n                <div className={\"vehicle-addition-panel\"}>\n                    <select\n                        className={\"vehicle-addition-select\"}\n                        value={this.state.vehicleType}\n                        disabled={this.state.blocked}\n                        onChange={this.handleVehicleTypeChanged}>\n                        <option value=\"car\">Car</option>\n                        <option value=\"bike\">Bike</option>\n                    </select>\n\n                    <div>\n                        <input\n                            placeholder={\"Model\"}\n                            value={this.state.vehicleModel}\n                            disabled={this.state.blocked}\n                            onChange={this.handleModelChanged}/>\n                    </div>\n\n                    {this.getIdInput()}\n\n                    <div>\n                        <button type={\"button\"}\n                                disabled={this.state.blocked}\n                                className={\"btn btn-primary\"}\n                                onClick={this.handleRequestClicked}>\n                            Request\n                        </button>\n                    </div>\n                    {this.getResult()}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport default class VehicleInfo extends Component {\n    state = {};\n    vehicle = this.props.vehicle;\n\n    getCarInfo = () => {\n        return (\n            <div>\n                <b>VIN:</b> {this.vehicle.id}\n            </div>\n        )\n    };\n\n    getBikeInfo = () => {\n        return (\n            <div>\n                <b>SERIAL:</b> {this.vehicle.id}\n            </div>\n        )\n    };\n\n    getIdInfo = () => {\n        return this.vehicle.type === \"car\" ?\n            this.getCarInfo() :\n            this.getBikeInfo();\n    };\n\n    getStateLabel = () => {\n        if (this.vehicle.status) {\n            return this.vehicle.status.toUpperCase();\n        }\n    };\n\n    render() {\n        return (\n            <div className={\"vehicle-info \" + this.vehicle.status}>\n                <div className={\"vehicle-info-first-row\"}>\n                    <div className={\"vehicle-type-label\"}>\n                        <b>Type:</b> {this.vehicle.type}\n                    </div>\n                    <div className={\"vehicle-status-label \" + this.vehicle.status + \"-label\"}>\n                        {this.getStateLabel()}\n                    </div>\n\n                </div>\n                <div>\n                    <b>Model:</b> {this.vehicle.model}\n                </div>\n\n                {this.getIdInfo()}\n\n                <div className={\"approvals \" + this.vehicle.status + \"-label\"}>\n                    {/*todo: extract */}\n                    {this.vehicle.status === 'pending' ? this.vehicle.approvals + \" / 2 approvals\" : \"\"}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport default class ApproveVehicle extends Component {\n    state = {};\n    vehicleId = this.props.vehicleId;\n    handleApproveClicked = this.props.handleApproveClicked;\n\n    onApproveClicked = (event) => {\n        this.handleApproveClicked(event.target.id)\n    };\n\n    getApproveButton = () => {\n        return (\n            <div className={\"vehicle-approve-action row\"}>\n                <button type={\"button\"}\n                        className={\"btn btn-success\"}\n                        id={this.vehicleId}\n                        onClick={this.onApproveClicked}>\n                    Approve\n                </button>\n            </div>\n        );\n    };\n\n    getContent = () => {\n        return this.getApproveButton();\n    };\n\n    render() {\n        return this.getContent();\n    }\n}","import React, {Component} from \"react\";\n\nimport VehicleInfo from \"./VehicleInfo\";\nimport ApproveVehicle from \"./ApproveVehicle\";\n\nexport default class SearchForVehicle extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: false,\n            notFound: false,\n            downloaded: false,\n            blocked: false,\n            id: \"\"\n        };\n        this.vehicleService = this.props.vehicleService;\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.propsChanged(nextProps)) {\n            if (this.state.id !== \"\") {\n                this.search(this.state.id);\n            }\n        }\n    }\n\n    propsChanged(nextProps) {\n        return this.props.change !== nextProps.change;\n    }\n\n    handleIdChanged = event =>\n        this.setState({\n            id: event.target.value,\n            downloaded: false,\n            error: false,\n            notFound: false\n        });\n\n    getStatusByType = (id, registeredIds, utilizationIds, transferIds, pendingIds) => {\n        if (utilizationIds.includes(id)) {\n            return \"utilize\";\n        } else if (transferIds.includes(id)) {\n            return \"transfer\";\n        } else if (pendingIds.includes(id)) {\n            return \"pending\";\n        } else if (registeredIds.includes(id)) {\n            return \"registered\";\n        }\n    };\n\n    search = (id, status) => {\n        console.log('[SEARCH FOR VEHICLE] Searching for %s', id);\n        this.vehicleService.searchForVehicle(id)\n            .then(response => {\n                console.log('[SEARCH FOR VEHICLE] Search for vehicle response', response);\n                response.status = status;\n                this.setState({\n                    vehicle: response\n                })\n            })\n            .catch(error => {\n                console.log('Searching for vehicle failed', error);\n                this.setState({\n                    error: true\n                });\n            })\n            .finally(() =>\n                this.setState({\n                    downloaded: true\n                })\n            );\n    };\n\n    handleRequestClicked = () => {\n        const id = this.state.id;\n\n        this.setState({\n            blocked: true\n        });\n\n        let registeredIds;\n        let utilizationIds;\n        let transferIds;\n        let pendingIds;\n\n        this.vehicleService.getRegisteredIds()\n            .then(response => {\n                registeredIds = response;\n                return this.vehicleService.getUtilizationIds();\n            })\n            .then(response => {\n                utilizationIds = response;\n                return this.vehicleService.getTransferIds();\n            })\n            .then(response => {\n                transferIds = response;\n                return this.vehicleService.getPendingIds();\n            })\n            .then(response => {\n                pendingIds = response;\n\n                let status = this.getStatusByType(id, registeredIds, utilizationIds, transferIds, pendingIds);\n\n                if (status) {\n                    return this.search(id, status);\n                } else {\n                    this.setState({\n                        notFound: true\n                    });\n                    throw Error();\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() =>\n                this.setState({\n                    blocked: false\n                })\n            )\n    };\n\n    handleApproveClicked = (id) => {\n        this.vehicleService.approveVehicle(id)\n            .then(() => {\n                console.log(\"[SEARCH FOR VEHICLE] Approved %s\", id);\n                this.setState({downloaded: false});\n                this.props.onChange();\n            });\n    };\n\n    getVehicleInfo = () =>\n        <div className={\"found-vehicle\"}>\n            Found vehicle\n            <VehicleInfo\n                vehicle={this.state.vehicle}/>\n            {this.state.vehicle.approvable &&\n            <ApproveVehicle\n                vehicleId={this.state.vehicle.id}\n                handleApproveClicked={this.handleApproveClicked}/>\n            }\n        </div>;\n\n    getNotFound = () =>\n        <div className=\"alert alert-warning\" role=\"alert\">\n            ID not found\n        </div>;\n\n    getErrorMessage = () =>\n        <div className=\"alert alert-danger\" role=\"alert\">\n            There was some error...\n        </div>;\n\n    getVehicleResult() {\n        return this.state.error ?\n            (this.state.notFound ?\n                this.getNotFound() :\n                this.getErrorMessage()) :\n            (this.state.downloaded ?\n                (this.state.vehicle &&\n                    this.getVehicleInfo()) :\n                null);\n    };\n\n    render() {\n        return (\n            <div>\n                <div className={\"search-for-vehicle-title\"}>\n                    Search for vehicle\n                </div>\n                <div className={\"search-for-vehicle-panel\"}>\n                    <div>\n                        <input\n                            placeholder={\"ID\"}\n                            disabled={this.state.blocked}\n                            value={this.state.id}\n                            onChange={this.handleIdChanged}/>\n                    </div>\n\n                    <div>\n                        <button type={\"button\"}\n                                disabled={this.state.blocked}\n                                className={\"btn btn-primary\"}\n                                onClick={this.handleRequestClicked}>\n                            Search\n                        </button>\n                    </div>\n\n                    {this.getVehicleResult()}\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\n\nexport default class TransferVehicle extends Component {\n    state = {\n        error: false,\n        transferred: false,\n        address: \"\",\n        id: \"\",\n        transferPossible: true,\n        blocked: false\n    };\n    vehicleService = this.props.vehicleService;\n\n    handleIdChanged = (event) => {\n        this.setState({\n            id: event.target.value,\n            transferPossible: true\n        })\n    };\n\n    handleAddressChanged = (event) => {\n        this.setState({\n            address: event.target.value\n        })\n    };\n\n    transfer(id, address) {\n        return this.vehicleService.transferVehicle(id, address)\n            .then(() => {\n                console.log('transfer then');\n                this.setState({\n                    transferred: true\n                });\n                this.props.onChange();\n            })\n            .catch(error => {\n                console.log('transferVehicle error', error.message);\n                this.setState({\n                    error: true,\n                    errorMessage: error.message\n                });\n            })\n            .finally(() => {\n                console.log('transfer finally');\n                this.setState({\n                    id: \"\",\n                    address: \"\",\n                    blocked: false\n                });\n            })\n    }\n\n    handleRequestClicked() {\n        const id = this.state.id;\n        const address = this.state.address;\n\n        // this.setState({\n        //     id: \"\",\n        //     address: \"\"\n        // });\n\n        this.setState({\n            blocked: true\n        });\n\n        this.vehicleService.isTransferPossible(id, address)\n            .then((response) => {\n                console.log(response);\n                if (response.transferPossible) {\n                    return this.transfer(id, address);\n                } else {\n                    this.setState({\n                        transferPossible: false,\n                        blocked: false,\n                        transferNotPossibleReason: response.reason,\n                        error: true\n                    });\n                    // throw Error();\n                }\n            })\n            .catch(error => {\n                console.log('isTransferPossible error', error);\n                this.setState({\n                    error: true,\n                })\n            });\n    };\n\n    getTransferPositiveInfo = () => {\n        return (\n            <div className=\"alert alert-success\" role=\"alert\">\n                Vehicle transfer requested successfully! Transaction will be finished after receiver approves the\n                transfer.\n            </div>\n        );\n    };\n\n    getErrorMessage = () => !this.state.transferPossible ?\n        this.getTransferNotPossibleError() :\n        this.getDefaultError();\n\n    getDefaultError = () =>\n        <div className=\"alert alert-danger\" role=\"alert\">\n            {this.state.errorMessage ?\n                this.state.errorMessage :\n                \"Unexpected error occurred.\"}\n        </div>;\n\n    getTransferNotPossibleError = () =>\n        <div className=\"alert alert-danger\" role=\"alert\">\n            {this.state.transferNotPossibleReason}\n        </div>;\n\n    getTransferResult() {\n        return this.state.error ?\n            this.getErrorMessage() :\n            (this.state.transferred ? this.getTransferPositiveInfo() : null);\n    };\n\n    render() {\n        return (\n            <div>\n                <div className={\"transfer-vehicle-title\"}>\n                    Transfer Vehicle\n                </div>\n\n                <div className={\"transfer-vehicle-panel\"}>\n                    <div>\n                        <input\n                            placeholder={\"Vehicle ID\"}\n                            value={this.state.id}\n                            disabled={this.state.blocked}\n                            onChange={this.handleIdChanged}/>\n                    </div>\n\n                    <div>\n                        <input\n                            placeholder={\"Receiver address\"}\n                            value={this.state.address}\n                            disabled={this.state.blocked}\n                            onChange={this.handleAddressChanged}/>\n                    </div>\n\n                    <div>\n                        <button type={\"button\"}\n                                className={\"btn btn-primary\"}\n                                disabled={this.state.blocked}\n                                onClick={this.handleRequestClicked.bind(this)}>\n                            Request transfer\n                        </button>\n                    </div>\n\n                    {this.getTransferResult()}\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\n\nimport VehicleInfo from \"./VehicleInfo\";\nimport ApproveVehicle from \"./ApproveVehicle\";\n\nexport default class AllPendingVehicles extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pendingApprovalVehicles: [],\n            utilizedApprovalVehicles: []\n        };\n        this.vehicleService = this.props.vehicleService;\n    }\n\n    componentDidMount() {\n        this.loadData();\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.propsChanged(nextProps)) {\n            this.loadData();\n        }\n    }\n\n    propsChanged(nextProps) {\n        return this.props.change !== nextProps.change;\n    }\n\n    loadData() {\n        this.vehicleService.getAllRegistrationRequestsPossibleToApprove()\n            .then(vehicles => {\n                console.log('[ALL PENDING VEHICLES] Registration requests possible to approve', vehicles);\n                this.setState({\n                    pendingApprovalVehicles: vehicles\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    downloadedPending: true\n                })\n            });\n\n        this.vehicleService.getAllUtilizationRequestsPossibleToApprove()\n            .then(response => {\n                console.log('[ALL PENDING VEHICLES] Utilization requests possible to approve', response);\n                this.setState({\n                    utilizationApprovalVehicles: response\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    downloadedUtilization: true\n                })\n            });\n    }\n\n    getAllPendingApprovalsDownloadError = () => {\n        return (\n            <div>\n                Something went wrong ...\n            </div>\n        )\n    };\n\n    handleApproveClicked = (id) => {\n        this.vehicleService.approveVehicle(id)\n            .then(response => {\n                console.log(\"[ALL PENDING VEHICLES] Approve vehicle response \", response);\n                this.props.onChange();\n            });\n    };\n\n    handleUtilizationClicked = (id) => {\n        this.vehicleService.approveUtilization(id)\n            .then(response => {\n                console.log(\"Approve vehicle utilization response \", response);\n                this.loadData();\n            });\n    };\n\n    getVehicleToApprove = (vehicle) => {\n        const approveContent = vehicle.status === \"pending\" ?\n            <ApproveVehicle\n                vehicleId={vehicle.id}\n                handleApproveClicked={this.handleApproveClicked}/>\n            :\n            (vehicle.status === \"utilize\" ?\n                    <ApproveVehicle\n                        vehicleId={vehicle.id}\n                        handleApproveClicked={this.handleUtilizationClicked}/>\n                    :\n                    null\n            );\n\n        return (\n            <div key={vehicle.id + vehicle.status}>\n                <VehicleInfo\n                    vehicle={vehicle}/>\n                {approveContent}\n            </div>\n        );\n    };\n\n    getPendingVehicleInfos = () => {\n        const pendingVehicles = this.state.pendingApprovalVehicles\n            .map(vehicle => ({...vehicle, status: \"pending\"}));\n        const utilizeVehicles = this.state.utilizationApprovalVehicles\n            .map(vehicle => ({...vehicle, status: \"utilize\"}));\n\n        return pendingVehicles\n            .concat(utilizeVehicles)\n            .map(this.getVehicleToApprove);\n    };\n\n    getPendingVehiclesContent = () =>\n        <div>\n            <div className={\"all-pending-vehicles-title\"}>\n                List of all pending approvals\n            </div>\n            {this.getPendingVehicleInfos()}\n        </div>;\n\n    getVehicles = () => this.pendingVehiclesPresent() ?\n        this.getPendingVehiclesContent() :\n        this.getDefault();\n\n    pendingVehiclesPresent = () =>\n        this.state.pendingApprovalVehicles.length > 0 ||\n        this.state.utilizationApprovalVehicles.length > 0;\n\n    getDefault = () =>\n        <div>\n            <div className=\"alert alert-info mine-vehicles\" role=\"alert\">\n                There are no pending approvals at the moment.\n            </div>\n        </div>;\n\n    getWait = () =>\n        <div className=\"alert alert-info\" role=\"alert\">\n            Please wait...\n        </div>;\n\n    render() {\n        return this.state.downloadedPending && this.state.downloadedUtilization ?\n            (this.state.error ?\n                this.getAllPendingApprovalsDownloadError() :\n                this.getVehicles()) :\n            this.getWait();\n    }\n}","import React, {Component} from \"react\";\n\nexport default class VehicleUtilization extends Component {\n    state = {};\n    vehicleId = this.props.vehicleId;\n    handleUtilization = this.props.handleUtilization;\n\n    onUtilizationClicked = (event) => {\n        this.handleUtilization(event.target.id)\n    };\n\n    getUtilizeButton = () => {\n        return (\n            <div className={\"vehicle-utilization-action row\"}>\n                <button type={\"button\"}\n                        className={\"btn btn-danger\"}\n                        id={this.vehicleId}\n                        onClick={this.onUtilizationClicked}>\n                    Utilize\n                </button>\n            </div>\n        );\n    };\n\n    getContent = () => {\n        return this.getUtilizeButton();\n    };\n\n    render() {\n        return this.getContent();\n    }\n}","import React, {Component} from \"react\";\n\nimport VehicleInfo from \"./VehicleInfo\";\nimport VehicleUtilization from \"./VehicleUtilization\";\n\nexport default class MineVehicles extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            downloadPending: false,\n            downloadRegistered: false,\n            downloadTransfered: false,\n            downloadUtilized: false,\n            error: false,\n            pendingVehicles: [],\n            utilizedVehicles: [],\n            registeredVehicles: [],\n            transferedVehicleIds: []\n        };\n        this.vehicleService = this.props.vehicleService;\n    }\n\n    componentDidMount() {\n        this.loadData();\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.propsChanged(nextProps)) {\n            this.loadData();\n        }\n    }\n\n    loadData() {\n        this.getUserPendingApprovals();\n        this.getUserUtilizedVehicles();\n        this.getUserRegisteredVehicles();\n        this.getTransferIds();\n    }\n\n    getTransferIds() {\n        this.vehicleService.getTransferIds()\n            .then(response => {\n                console.log('[MINE VEHICLES] Transferred vehicles ids', response);\n                this.setState({\n                    transferedVehicleIds: response\n                })\n\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    downloadTransfered: true\n                });\n            });\n    }\n\n    getUserRegisteredVehicles() {\n        this.vehicleService.getUserRegisteredVehicles()\n            .then(response => {\n                this.setState({\n                    registeredVehicles: response\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    downloadRegistered: true\n                });\n            });\n    }\n\n    getUserPendingApprovals() {\n        this.vehicleService.getUserPendingApprovals()\n            .then(response => {\n                this.setState({\n                    pendingVehicles: response\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    downloadPending: true\n                });\n            });\n    }\n\n    getUserUtilizedVehicles() {\n        this.vehicleService.getUserUtilizationPendings()\n            .then(vehicles => {\n                this.setState({\n                    utilizedVehicles: vehicles\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    downloadUtilized: true\n                });\n            });\n    }\n\n    propsChanged(nextProps) {\n        return this.props.change !== nextProps.change;\n    }\n\n    getVehiclesDownloadError = () => {\n        return (\n            <div>\n                Something went wrong ...\n            </div>\n        )\n    };\n\n    handleUtilization = (id) => {\n        this.vehicleService.utilizeVehicle(id)\n            .then(response => {\n                console.log(\"Utilize vehicle\", response);\n                this.loadData();\n            });\n    };\n\n    getMinePendingApprovalVehicleInfos = (vehicles) => {\n        return (\n            vehicles.map(vehicle => {\n                return (<div key={vehicle.id + vehicle.status}>\n                    <VehicleInfo\n                        vehicle={vehicle}/>\n                    {vehicle.status === \"registered\" &&\n                    <VehicleUtilization\n                        vehicleId={vehicle.id}\n                        handleUtilization={this.handleUtilization}/>\n                    }\n                </div>)\n            })\n        );\n    };\n\n    getVehiclesContent = (vehicles) => {\n        return (\n            <div>\n                <div className={\"mine-vehicles-title\"}>\n                    My vehicles\n                </div>\n                {this.getMinePendingApprovalVehicleInfos(vehicles)}\n            </div>\n        );\n    };\n\n    getVehicles = () => {\n        const pendingVehicles = this.state.pendingVehicles\n            .map(vehicle => ({...vehicle, status: \"pending\"}));\n\n        const utilizedVehicles = this.state.utilizedVehicles\n            .map(vehicle => ({...vehicle, status: \"utilize\"}));\n\n        const registeredVehicles = this.state.registeredVehicles\n            .filter(vehicle => !this.state.transferedVehicleIds.includes(vehicle.id))\n            .map(vehicle => ({...vehicle, status: \"registered\"}));\n\n        const transferedVehicles = this.state.registeredVehicles\n            .filter(vehicle => this.state.transferedVehicleIds.includes(vehicle.id))\n            .map(vehicle => ({...vehicle, status: \"transfer\"}));\n\n        const vehicles = pendingVehicles\n            .concat(utilizedVehicles)\n            .concat(registeredVehicles)\n            .concat(transferedVehicles);\n\n        return vehicles && vehicles.length > 0 ?\n            this.getVehiclesContent(vehicles) :\n            this.getDefault();\n    };\n\n    getDefault = () => {\n        return (\n            <div>\n                <div className=\"alert alert-info mine-vehicles\" role=\"alert\">\n                    You don't have any vehicles registered yet.\n                </div>\n            </div>\n        )\n    };\n\n    getWait = () => {\n        return (\n            <div className=\"alert alert-info\" role=\"alert\">\n                Please wait...\n            </div>\n        )\n    };\n\n    render() {\n        return this.state.downloadRegistered &&\n        this.state.downloadPending &&\n        this.state.downloadTransfered &&\n        this.state.downloadUtilized ?\n            (this.state.error ?\n                this.getVehiclesDownloadError() :\n                this.getVehicles()) :\n            this.getWait();\n    }\n}","import React, {Component} from \"react\";\n\nimport VehicleInfo from \"./VehicleInfo\";\nimport ApproveVehicle from \"./ApproveVehicle\";\n\nexport default class IncomingPendingTransfer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            download: false,\n            error: false,\n            vehicles: [],\n        };\n        this.vehicleService = this.props.vehicleService;\n    }\n\n    componentDidMount() {\n        this.loadData();\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.propsChanged(nextProps)) {\n            this.loadData();\n        }\n    }\n\n    propsChanged(nextProps) {\n        return this.props.change !== nextProps.change;\n    }\n\n    loadData() {\n        this.vehicleService.getIncomingTransfers()\n            .then(response => {\n                this.setState({\n                    vehicles: response\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    error: true\n                })\n            })\n            .finally(() => {\n                this.setState({\n                    download: true\n                });\n            });\n    }\n\n    getVehiclesDownloadError = () =>\n        <div>\n            Something went wrong ...\n        </div>;\n\n    handleApproveClicked = id =>\n        this.vehicleService.approveTransfer(id)\n            .then(() => {\n                console.log(\"transfer approved \", id);\n                this.props.onChange();\n            });\n\n    getIncomingPendingTransferVehicleInfos = vehicles =>\n        vehicles.map(vehicle =>\n            <div key={vehicle.id + vehicle.status}>\n                <VehicleInfo\n                    vehicle={vehicle}/>\n                <ApproveVehicle\n                    vehicleId={vehicle.id}\n                    handleApproveClicked={this.handleApproveClicked}/>\n            </div>\n        );\n\n    getVehiclesContent = vehicles =>\n        <div className={\"incoming-transfers\"}>\n            <div className={\"mine-vehicles-title\"}>\n                Incoming pending transfers\n            </div>\n            {this.getIncomingPendingTransferVehicleInfos(vehicles)}\n        </div>;\n\n    getVehicles = () => {\n        const vehicles = this.state.vehicles\n            .map(vehicle => ({...vehicle, status: \"transfer\"}));\n\n        return vehicles && vehicles.length > 0 ?\n            this.getVehiclesContent(vehicles) :\n            this.getDefault();\n    };\n\n    getDefault = () =>\n        <div>\n            <div className=\"alert alert-info incoming-pending-transfer-vehicles\" role=\"alert\">\n                No transfers to approve at the moment.\n            </div>\n        </div>;\n\n    getWait = () =>\n        <div className=\"alert alert-info\" role=\"alert\">\n            Please wait...\n        </div>;\n\n    render() {\n        return this.state.download ?\n            (this.state.error ?\n                this.getVehiclesDownloadError() :\n                this.getVehicles()) :\n            this.getWait();\n    }\n}","import React, {Component} from \"react\";\n\nimport VehicleAddition from \"./VehicleAddition\";\nimport SearchForVehicle from \"./SearchForVehicle\";\nimport TransferVehicle from \"./TransferVehicle\";\nimport AllPendingVehicles from \"./AllPendingVehicles\";\nimport MineVehicles from \"./MineVehicles\";\nimport IncomingPendingTransfer from \"./IncomingPendingTransfer\";\n\nexport default class Content extends Component {\n\n    constructor(props) {\n        super(props);\n        this.vehicleService = this.props.vehicleService;\n        this.state = {\n            page: this.props.page,\n            addingComponentChange: true,\n            browsingComponentChange: true,\n            privateComponentChange: true\n        };\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.page !== this.state.page) {\n            this.setState({page: nextProps.page});\n        }\n        if (this.accountChanged(nextProps)) {\n            this.onAddingComponentChange();\n            this.onBrowsingComponentChange();\n            this.onPrivateComponentChange();\n        }\n    }\n\n    accountChanged(nextProps) {\n        return nextProps.account !== this.props.account;\n    }\n\n    getAddingComponent = () => {\n        return (\n            <div className={\"row\"}>\n                <div className={\"col-sm-6\"}>\n                    <VehicleAddition\n                        vehicleService={this.vehicleService}\n                        onChange={this.onAddingComponentChange.bind(this)}\n                        account={this.props.account}/>\n                </div>\n                <div className={\"col-sm-6\"}>\n                    <MineVehicles\n                        vehicleService={this.vehicleService}\n                        change={this.state.addingComponentChange}/>\n                </div>\n            </div>\n        );\n    };\n\n    getBrowsingComponent = () => {\n        return (\n            <div className={\"row\"}>\n                <div className={\"col-sm-6\"}>\n                    <SearchForVehicle\n                        vehicleService={this.vehicleService}\n                        change={this.state.browsingComponentChange}\n                        onChange={this.onBrowsingComponentChange.bind(this)}/>\n                </div>\n                <div className={\"col-sm-6\"}>\n                    <AllPendingVehicles\n                        vehicleService={this.vehicleService}\n                        change={this.state.browsingComponentChange}\n                        onChange={this.onBrowsingComponentChange.bind(this)}/>\n                </div>\n            </div>\n        );\n    };\n\n    getPrivateComponent = () => {\n        return (\n            <div className={\"row\"}>\n                <div className={\"col-sm-6\"}>\n                    <MineVehicles\n                        vehicleService={this.vehicleService}\n                        change={this.state.privateComponentChange}/>\n                </div>\n                <div className={\"col-sm-6\"}>\n                    <div className={\"col-xs-12\"}>\n                        <TransferVehicle\n                            vehicleService={this.vehicleService}\n                            onChange={this.onPrivateComponentChange.bind(this)}/>\n                    </div>\n                    <div className={\"col-xs-12\"}>\n                        <IncomingPendingTransfer\n                            vehicleService={this.vehicleService}\n                            change={this.state.privateComponentChange}\n                            onChange={this.onPrivateComponentChange.bind(this)}/>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    onAddingComponentChange() {\n        this.setState(prevState => ({\n            addingComponentChange: !prevState.addingComponentChange\n        }));\n    }\n\n    onBrowsingComponentChange() {\n        this.setState(prevState => ({\n            browsingComponentChange: !prevState.browsingComponentChange\n        }));\n    }\n\n    onPrivateComponentChange() {\n        this.setState(prevState => ({\n            privateComponentChange: !prevState.privateComponentChange\n        }));\n    }\n\n    getDefaultComponent = () => {\n        return (\n            <div className={\"row\"}>\n                <div\n                    className={\"col-sm-12\"}\n                    style={{textAlign: \"center\"}}>\n                    Choose something!\n                </div>\n            </div>\n        )\n    };\n\n    getProperComponents = () => {\n        switch (this.state.page) {\n            case \"adding\":\n                return this.getAddingComponent();\n            case \"browsing\":\n                return this.getBrowsingComponent();\n            case \"private\":\n                return this.getPrivateComponent();\n            default:\n                return this.getDefaultComponent();\n        }\n    };\n\n    render() {\n        return (\n            this.getProperComponents()\n        );\n    }\n\n}","import React, {Component} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport VehicleOwnershipDatabase from \"./contracts/VehicleOwnershipDatabase\";\nimport VehicleService from \"./services/VehicleService\";\n\nimport NavigationBar from \"./components/NavigationBar\";\nimport Content from \"./components/Content\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            vehicleService: null,\n            page: 'private',\n            account: null,\n            intervalId: null\n        };\n    }\n\n    async componentDidMount() {\n        try {\n            const web3 = await getWeb3();\n            const vehicleService = await VehicleService.init(web3);\n            const account = (await web3.eth.getAccounts())[0];\n            const networkId = (await web3.eth.net.getId());\n\n            this.setState({\n                web3: web3,\n                vehicleService: vehicleService,\n                account: account,\n                networkId: networkId\n            });\n        } catch (error) {\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n            );\n            console.error(error);\n        }\n        const intervalId = setInterval(this.timer.bind(this), 1000);\n        this.setState({intervalId: intervalId});\n    };\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervalId);\n    }\n\n    async timer() {\n        const account = (await this.state.web3.eth.getAccounts())[0];\n        const networkId = (await this.state.web3.eth.net.getId());\n\n        if (account !== this.state.account ||\n            networkId !== this.state.networkId) {\n            this.setState({\n                account: account,\n                networkId: networkId\n            });\n        }\n    }\n\n    onNavigationChange = (page) => {\n        this.setState({page: page});\n    };\n\n    getNavigationBar = () => {\n        return <NavigationBar\n            account={this.state.account}\n            networkId={this.state.networkId}\n            page={this.state.page}\n            onNavigationChange={this.onNavigationChange.bind(this)}/>\n    };\n\n    getContent = () => {\n        const showContent = VehicleOwnershipDatabase.networks[this.state.networkId];\n        return showContent &&\n            <Content\n                account={this.state.account}\n                page={this.state.page}\n                vehicleService={this.state.vehicleService}/>\n    };\n\n    render() {\n        if (!this.state.web3) {\n            return (\n                <div className=\"alert alert-info\" role=\"alert\">\n                    Loading Web3, accounts, and contract...\n                </div>\n            );\n        } else {\n            return (\n                <div className={\"row\"} id={\"main\"}>\n                    <div className={\"col-lg-8 offset-lg-2 col-md-8 offset-md-2 col-sm-10 offset-sm-1 col-xs-12\"}>\n                        {this.getNavigationBar()}\n\n                        {this.getContent()}\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}